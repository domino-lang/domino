composition KX_Red_1 {
        const b: Bool;
        const n: Integer;
        const zeron: Bits(n);
        const prf: fn Bits(n), Integer, Integer, Bits(n), Bits(n), Bool ->  Bits(n);
        const mac: fn Bits(n), Bits(n), Integer -> Bits(n);
    
    instance KX_Red = KX_Red {
        params {
        b: b,
        n: n,
        zeron: zeron,
        prf: prf,
        mac: mac,
        }
    }

    instance Nonces = Nonces {
        params {
        b: true,
        n: n,
        }
    }

    compose {
        adversary: {
            Send1:  KX_Red,
            Send2:  KX_Red,
            Send3:  KX_Red,
            Send4:  KX_Red,
            Send5:  KX_Red,
            Reveal: KX_Red,
            Test:   KX_Red,
            NewSession: KX_Red,
            NewKey: KX_Red,
        },
        KX_Red: {
            Sample: Nonces,
        },
    }
}
