package Lev {
    params {
        w:   Integer,
        n:   Integer,
    }

    state {
    }

    import oracles {
        GETBIT(h: Integer) -> Bool,
        SETBIT(h: Integer, zz:Bool) -> (),
    }

    oracle EVAL(C: Table(Integer,(Integer,Integer,Table((Bool,Bool),Bool)))) -> () {
        for j: 1 <= j <= w {
            temp     <- Unwrap(C[j]);
            (l,r,op) <- parse temp ;
        zl <- invoke GETBIT(l);
        zr <- invoke GETBIT(r);
        z <- Unwrap(op[(zl,zr)]);
        _ <- invoke SETBIT(j,z);
        }
        return ;
    }

}