composition PrvSim1for {
  const w: Integer;
  const n: Integer;
  const d: Integer;
  const m: Integer;
  const p: Integer;
  const zeron: Bits(n);
  const zerom: Bits(m);
  const encn: fn Bits(n),Bits(n),Bits(n) -> Bits(m);
  const encm: fn Bits(n),Bits(m),Bits(n) -> Bits(p);

  instance sim = SIMtdyaofor {
    params {
        w: w,
        d: d,
        p: p,
        n: n,
     encn: encn,
     encm: encm,
    zeron: zeron,
    }
  }

  instance mod = ModPRVSIM1for {
    params {
        w: w,
        d: d,
        p: p,
        n: n,
    }
  }

  instance bits_top = Bits {
  }



  for dd: 1 <= dd <= d {
  instance ev[dd] = Lev {
    params {
        w:   w,
        n:   n,
    }
  }}

  for dd: 1 <= dd <= d {
    }
  instance bits[dd] = Bits {
    }


for dd: 1 <= dd <= d { 
  compose {
     ev: {
        with index [dd] SETBIT: bits[(dd-1)],
                        GETBIT: bits[dd]],
          }}}

  compose {
    adversary: {
      GARBLE:    mod,
    },
    mod: {
      SETBIT:    bits_top,
      GETAOUT:   sim,
      GBL:       sim,
      GETDINF:   sim,
    },
    sim: {
      GETBIT:   bits_bot,
    },
  }
}