package En {
    params {
        n: Integer,
    }

    state {
        z: Table(Integer,Bool),
    }

    oracle GETAOUT(h: Integer) -> Bits(n) {
        assert (z[h] != None as Bool);
        zz <- Unwrap(z[h]);
        Z <- invoke GETKEYSIN(h);
        ZZ <- Unwrap(Z[zz]);
        return ZZ;
    }

    oracle SETBIT(h: Integer, zz:Bool) -> () {
        assert (z[h] == None as Bool);
        z[h] <- Some(zz);
        return ;
    }

    import oracles {
        GETKEYSIN(h: Integer) -> Table(Bool,Bits(n)),
    }

}