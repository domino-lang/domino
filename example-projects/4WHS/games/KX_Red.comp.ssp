composition KX_Red {
        const n: Integer;
        const zeron: Bits(n);
        const prf: fn Bits(n), Integer, Integer, Bits(n), Bits(n), Bool ->  Bits(n);
        const mac: fn Bits(n), Bits(n), Integer -> Bits(n);
        const b: Bool;
        const bnonces: Bool;
    
    instance KX = KX_Red {
        params {
        b: b,
        n: n,
        zeron: zeron,
        prf: prf,
        mac: mac,
        }
    }

    instance Nonces = Nonces {
        params {
        b: bnonces,
        n: n,
        }
    }


    compose {
        adversary: {
            Send1:      KX,
            Send2:      KX,
            Send3:      KX,
            Send4:      KX,
            Send5:      KX,
            Reveal:     KX,
            Test:       KX,
            NewSession: KX,
            NewKey:     KX,
        },
        KX: {
            Sample:     Nonces,
        },

    }
}
