package KEM {
  params {
    n_sk: Integer,
    n_pk: Integer,
    n_ct: Integer,
    n_ss: Integer,

    f_encaps: fn (Bits(n_rand), Bits(n_pk)) -> Bits(n_ss),
  }

  oracle Encaps(i_rand: Integer, pk: Bits(n_pk)) -> Bits(n_ct) {
    get <-invoke Get(pk);
    (_, hon_sk) <- parse get;

    getRand <-invoke GetRand(i_rand);
    (rand, hon_rand) <- parse getRand;

    (k, ct) <- parse encaps(rand, pk);

    hon <- (hon_sk and hon_rand);
    _ <- invoke Set((ct, pk), hon, k);

    return ct;
  }
}


