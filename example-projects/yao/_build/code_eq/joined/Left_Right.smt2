(set-logic ALL)
(declare-sort Bits_m 0)
(declare-sort Bits_n 0)
(declare-sort Bits_p 0)
(declare-datatypes ((Maybe 1)) ((par (T) ((mk-some (maybe-get T)) (mk-none)))))
(declare-datatypes ((Tuple1 1)) ((par (T1) ((mk-tuple1 (el1 T1))))))
(declare-datatypes ((Tuple2 2)) ((par (T1 T2) ((mk-tuple2 (el1 T1) (el2 T2))))))
(declare-datatypes ((Tuple3 3)) ((par (T1 T2 T3) ((mk-tuple3 (el1 T1) (el2 T2) (el3 T3))))))
(declare-datatypes ((Tuple4 4)) ((par (T1 T2 T3 T4) ((mk-tuple4 (el1 T1) (el2 T2) (el3 T3) (el4 T4))))))
(declare-datatypes ((Tuple5 5)) ((par (T1 T2 T3 T4 T5) ((mk-tuple5 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5))))))
(declare-datatypes ((Tuple6 6)) ((par (T1 T2 T3 T4 T5 T6) ((mk-tuple6 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6))))))
(declare-datatypes ((Tuple7 7)) ((par (T1 T2 T3 T4 T5 T6 T7) ((mk-tuple7 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7))))))
(declare-datatypes ((Tuple8 8)) ((par (T1 T2 T3 T4 T5 T6 T7 T8) ((mk-tuple8 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8))))))
(declare-datatypes ((Tuple9 9)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9) ((mk-tuple9 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9))))))
(declare-datatypes ((Tuple10 10)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10) ((mk-tuple10 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10))))))
(declare-datatypes ((Tuple11 11)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11) ((mk-tuple11 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11))))))
(declare-datatypes ((Tuple12 12)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12) ((mk-tuple12 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12))))))
(declare-datatypes ((Tuple13 13)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13) ((mk-tuple13 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13))))))
(declare-datatypes ((Tuple14 14)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14) ((mk-tuple14 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14))))))
(declare-datatypes ((Tuple15 15)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15) ((mk-tuple15 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15))))))
(declare-datatypes ((Tuple16 16)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16) ((mk-tuple16 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16))))))
(declare-datatypes ((Tuple17 17)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17) ((mk-tuple17 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17))))))
(declare-datatypes ((Tuple18 18)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18) ((mk-tuple18 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18))))))
(declare-datatypes ((Tuple19 19)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19) ((mk-tuple19 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19))))))
(declare-datatypes ((Tuple20 20)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20) ((mk-tuple20 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20))))))
(declare-datatypes ((Tuple21 21)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21) ((mk-tuple21 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21))))))
(declare-datatypes ((Tuple22 22)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22) ((mk-tuple22 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22))))))
(declare-datatypes ((Tuple23 23)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23) ((mk-tuple23 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23))))))
(declare-datatypes ((Tuple24 24)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24) ((mk-tuple24 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24))))))
(declare-datatypes ((Tuple25 25)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25) ((mk-tuple25 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25))))))
(declare-datatypes ((Tuple26 26)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26) ((mk-tuple26 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26))))))
(declare-datatypes ((Tuple27 27)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26 T27) ((mk-tuple27 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26) (el27 T27))))))
(declare-datatypes ((Tuple28 28)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26 T27 T28) ((mk-tuple28 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26) (el27 T27) (el28 T28))))))
(declare-datatypes ((Tuple29 29)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26 T27 T28 T29) ((mk-tuple29 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26) (el27 T27) (el28 T28) (el29 T29))))))
(declare-datatypes ((Tuple30 30)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26 T27 T28 T29 T30) ((mk-tuple30 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26) (el27 T27) (el28 T28) (el29 T29) (el30 T30))))))
(declare-datatypes ((Tuple31 31)) ((par (T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 T21 T22 T23 T24 T25 T26 T27 T28 T29 T30 T31) ((mk-tuple31 (el1 T1) (el2 T2) (el3 T3) (el4 T4) (el5 T5) (el6 T6) (el7 T7) (el8 T8) (el9 T9) (el10 T10) (el11 T11) (el12 T12) (el13 T13) (el14 T14) (el15 T15) (el16 T16) (el17 T17) (el18 T18) (el19 T19) (el20 T20) (el21 T21) (el22 T22) (el23 T23) (el24 T24) (el25 T25) (el26 T26) (el27 T27) (el28 T28) (el29 T29) (el30 T30) (el31 T31))))))
(declare-datatype Empty ((mk-empty)) )
(declare-fun __sample-rand-Left-Bits_m (Int Int)
 Bits_m)

(declare-fun __sample-rand-Left-Bits_n (Int Int)
 Bits_n)

(declare-fun __sample-rand-Left-Bits_p (Int Int)
 Bits_p)

(declare-fun __func-Left-encm (Bits_n Bits_m Bits_n)
 Bits_p)

(declare-fun __func-Left-encn (Bits_n Bits_n Bits_n)
 Bits_m)

(declare-datatype State_Left_keys_top ((mk-state-Left-keys_top (state-Left-keys_top-T (Array Int (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (state-Left-keys_top-z (Array Int (Maybe Bool)
)
)
 (state-Left-keys_top-flag (Array Int (Maybe Bool)
)
)
)
)
)

(declare-datatype State_Left_keys_bottom ((mk-state-Left-keys_bottom (state-Left-keys_bottom-T (Array Int (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (state-Left-keys_bottom-z (Array Int (Maybe Bool)
)
)
 (state-Left-keys_bottom-flag (Array Int (Maybe Bool)
)
)
)
)
)

(declare-datatype State_Left_gate ((mk-state-Left-gate)
)
)

(declare-datatype State_Left_enc ((mk-state-Left-enc)
)
)

(declare-datatype CompositionState-Left ((mk-composition-state-Left (composition-pkgstate-Left-keys_top State_Left_keys_top)
 (composition-pkgstate-Left-keys_bottom State_Left_keys_bottom)
 (composition-pkgstate-Left-gate State_Left_gate)
 (composition-pkgstate-Left-enc State_Left_enc)
 (composition-param-Left-m Int)
 (composition-param-Left-n Int)
 (composition-param-Left-p Int)
 (composition-param-Left-zerom Bits_m)
 (composition-param-Left-zeron Bits_n)
 (composition-rand-Left-0 Int)
 (composition-rand-Left-1 Int)
 (composition-rand-Left-2 Int)
 (composition-rand-Left-3 Int)
 (composition-rand-Left-4 Int)
 (composition-rand-Left-5 Int)
 (composition-rand-Left-6 Int)
 (composition-rand-Left-7 Int)
 (composition-rand-Left-8 Int)
 (composition-rand-Left-9 Int)
 (composition-rand-Left-10 Int)
 (composition-rand-Left-11 Int)
 (composition-rand-Left-12 Int)
)
)
)

(declare-datatype Return_Left_keys_top_GETKEYSIN ((mk-return-Left-keys_top-GETKEYSIN (return-Left-keys_top-GETKEYSIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETKEYSIN-state-length Int)
 (return-Left-keys_top-GETKEYSIN-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Left-keys_top-GETKEYSIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_GETAIN ((mk-return-Left-keys_top-GETAIN (return-Left-keys_top-GETAIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETAIN-state-length Int)
 (return-Left-keys_top-GETAIN-value (Maybe Bits_n)
)
 (return-Left-keys_top-GETAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_GETINAIN ((mk-return-Left-keys_top-GETINAIN (return-Left-keys_top-GETINAIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETINAIN-state-length Int)
 (return-Left-keys_top-GETINAIN-value (Maybe Bits_n)
)
 (return-Left-keys_top-GETINAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_GETAOUT ((mk-return-Left-keys_top-GETAOUT (return-Left-keys_top-GETAOUT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETAOUT-state-length Int)
 (return-Left-keys_top-GETAOUT-value (Maybe Bits_n)
)
 (return-Left-keys_top-GETAOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_GETKEYSOUT ((mk-return-Left-keys_top-GETKEYSOUT (return-Left-keys_top-GETKEYSOUT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETKEYSOUT-state-length Int)
 (return-Left-keys_top-GETKEYSOUT-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Left-keys_top-GETKEYSOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_GETBIT ((mk-return-Left-keys_top-GETBIT (return-Left-keys_top-GETBIT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-GETBIT-state-length Int)
 (return-Left-keys_top-GETBIT-value (Maybe Bool)
)
 (return-Left-keys_top-GETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_top_SETBIT ((mk-return-Left-keys_top-SETBIT (return-Left-keys_top-SETBIT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_top-SETBIT-state-length Int)
 (return-Left-keys_top-SETBIT-value (Maybe Empty)
)
 (return-Left-keys_top-SETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETKEYSIN ((mk-return-Left-keys_bottom-GETKEYSIN (return-Left-keys_bottom-GETKEYSIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETKEYSIN-state-length Int)
 (return-Left-keys_bottom-GETKEYSIN-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Left-keys_bottom-GETKEYSIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETAIN ((mk-return-Left-keys_bottom-GETAIN (return-Left-keys_bottom-GETAIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETAIN-state-length Int)
 (return-Left-keys_bottom-GETAIN-value (Maybe Bits_n)
)
 (return-Left-keys_bottom-GETAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETINAIN ((mk-return-Left-keys_bottom-GETINAIN (return-Left-keys_bottom-GETINAIN-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETINAIN-state-length Int)
 (return-Left-keys_bottom-GETINAIN-value (Maybe Bits_n)
)
 (return-Left-keys_bottom-GETINAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETAOUT ((mk-return-Left-keys_bottom-GETAOUT (return-Left-keys_bottom-GETAOUT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETAOUT-state-length Int)
 (return-Left-keys_bottom-GETAOUT-value (Maybe Bits_n)
)
 (return-Left-keys_bottom-GETAOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETKEYSOUT ((mk-return-Left-keys_bottom-GETKEYSOUT (return-Left-keys_bottom-GETKEYSOUT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETKEYSOUT-state-length Int)
 (return-Left-keys_bottom-GETKEYSOUT-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Left-keys_bottom-GETKEYSOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_GETBIT ((mk-return-Left-keys_bottom-GETBIT (return-Left-keys_bottom-GETBIT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-GETBIT-state-length Int)
 (return-Left-keys_bottom-GETBIT-value (Maybe Bool)
)
 (return-Left-keys_bottom-GETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_keys_bottom_SETBIT ((mk-return-Left-keys_bottom-SETBIT (return-Left-keys_bottom-SETBIT-state (Array Int CompositionState-Left)
)
 (return-Left-keys_bottom-SETBIT-state-length Int)
 (return-Left-keys_bottom-SETBIT-value (Maybe Empty)
)
 (return-Left-keys_bottom-SETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Left_gate_GBLG ((mk-return-Left-gate-GBLG (return-Left-gate-GBLG-state (Array Int CompositionState-Left)
)
 (return-Left-gate-GBLG-state-length Int)
 (return-Left-gate-GBLG-value (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 (return-Left-gate-GBLG-is-abort Bool)
)
)
)

(declare-datatype Return_Left_enc_ENCN ((mk-return-Left-enc-ENCN (return-Left-enc-ENCN-state (Array Int CompositionState-Left)
)
 (return-Left-enc-ENCN-state-length Int)
 (return-Left-enc-ENCN-value (Maybe Bits_m)
)
 (return-Left-enc-ENCN-is-abort Bool)
)
)
)

(declare-datatype Return_Left_enc_ENCM ((mk-return-Left-enc-ENCM (return-Left-enc-ENCM-state (Array Int CompositionState-Left)
)
 (return-Left-enc-ENCM-state-length Int)
 (return-Left-enc-ENCM-value (Maybe Bits_p)
)
 (return-Left-enc-ENCM-is-abort Bool)
)
)
)

; Composition of Left

(define-fun oracle-Left-keys_top-GETKEYSIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETKEYSIN (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETKEYSIN __global_state __state_length (mk-some Z)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETKEYSIN __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-GETAIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETAIN (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-GETINAIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETINAIN (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z (not zz)
)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETINAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETINAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-GETAOUT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETAOUT (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_top-z __self_state)
 h)
 (mk-some true)
)
 (let ((__self_state (mk-state-Left-keys_top (state-Left-keys_top-T __self_state)
 (state-Left-keys_top-z __self_state)
 (store (state-Left-keys_top-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Left-keys_top-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 1 (composition-rand-Left-1 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-1 (select __global_state __state_length)
)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Left-Bits_n 2 (composition-rand-Left-2 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-2 (select __global_state __state_length)
)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Left-keys_top (store (state-Left-keys_top-T __self_state)
 h (mk-some Z)
)
 (state-Left-keys_top-z __self_state)
 (state-Left-keys_top-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETAOUT __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-GETKEYSOUT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETKEYSOUT (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Left-keys_top-flag __self_state)
 h)
 (mk-some true)
)
)
 (let ((__self_state (mk-state-Left-keys_top (state-Left-keys_top-T __self_state)
 (state-Left-keys_top-z __self_state)
 (store (state-Left-keys_top-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Left-keys_top-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 3 (composition-rand-Left-3 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-3 (select __global_state __state_length)
)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Left-Bits_n 4 (composition-rand-Left-4 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-4 (select __global_state __state_length)
)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Left-keys_top (store (state-Left-keys_top-T __self_state)
 h (mk-some Z)
)
 (state-Left-keys_top-z __self_state)
 (state-Left-keys_top-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETKEYSOUT __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-GETBIT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_top_GETBIT (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Left-keys_top-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETBIT __global_state __state_length (mk-some zz)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-GETBIT __global_state __state_length (as mk-none (Maybe Bool)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_top-SETBIT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
 (zz Bool)
)
 Return_Left_keys_top_SETBIT (let ((__self_state (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_top-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
 (let ((__self_state (mk-state-Left-keys_top (state-Left-keys_top-T __self_state)
 (store (state-Left-keys_top-z __self_state)
 h (mk-some zz)
)
 (state-Left-keys_top-flag __self_state)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-SETBIT __global_state __state_length (mk-some mk-empty)
 false)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left __self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_top-SETBIT __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETKEYSIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETKEYSIN (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETKEYSIN __global_state __state_length (mk-some Z)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETKEYSIN __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETAIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETAIN (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETINAIN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETINAIN (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z (not zz)
)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETINAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETINAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETAOUT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETAOUT (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Left-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((__self_state (mk-state-Left-keys_bottom (state-Left-keys_bottom-T __self_state)
 (state-Left-keys_bottom-z __self_state)
 (store (state-Left-keys_bottom-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Left-keys_bottom-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 5 (composition-rand-Left-5 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-5 (select __global_state __state_length)
)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Left-Bits_n 6 (composition-rand-Left-6 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-6 (select __global_state __state_length)
)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Left-keys_bottom (store (state-Left-keys_bottom-T __self_state)
 h (mk-some Z)
)
 (state-Left-keys_bottom-z __self_state)
 (state-Left-keys_bottom-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Left-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETAOUT __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETKEYSOUT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETKEYSOUT (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Left-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
)
 (let ((__self_state (mk-state-Left-keys_bottom (state-Left-keys_bottom-T __self_state)
 (state-Left-keys_bottom-z __self_state)
 (store (state-Left-keys_bottom-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Left-keys_bottom-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 7 (composition-rand-Left-7 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-7 (select __global_state __state_length)
)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Left-Bits_n 8 (composition-rand-Left-8 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-8 (select __global_state __state_length)
)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Left-keys_bottom (store (state-Left-keys_bottom-T __self_state)
 h (mk-some Z)
)
 (state-Left-keys_bottom-z __self_state)
 (state-Left-keys_bottom-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETKEYSOUT __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-GETBIT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
)
 Return_Left_keys_bottom_GETBIT (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Left-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Left-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETBIT __global_state __state_length (mk-some zz)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-GETBIT __global_state __state_length (as mk-none (Maybe Bool)
)
 true)
)
)
)
)

(define-fun oracle-Left-keys_bottom-SETBIT ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
 (zz Bool)
)
 Return_Left_keys_bottom_SETBIT (let ((__self_state (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Left-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
 (let ((__self_state (mk-state-Left-keys_bottom (state-Left-keys_bottom-T __self_state)
 (store (state-Left-keys_bottom-z __self_state)
 h (mk-some zz)
)
 (state-Left-keys_bottom-flag __self_state)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-SETBIT __global_state __state_length (mk-some mk-empty)
 false)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-keys_bottom-SETBIT __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
)
)

(define-fun oracle-Left-enc-ENCN ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (j Int)
 (d Bool)
 (nzero Bits_n)
 (none Bits_n)
)
 Return_Left_enc_ENCN (let ((__self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
)
)
 (let ((__ret (oracle-Left-keys_top-GETKEYSIN __global_state __state_length j)
)
)
 (ite (return-Left-keys_top-GETKEYSIN-is-abort __ret)
 (let ((__global_state (return-Left-keys_top-GETKEYSIN-state __ret)
)
 (__state_length (return-Left-keys_top-GETKEYSIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCN __global_state __state_length (as mk-none (Maybe Bits_m)
)
 true)
)
)
 (let ((__global_state (return-Left-keys_top-GETKEYSIN-state __ret)
)
 (__state_length (return-Left-keys_top-GETKEYSIN-state-length __ret)
)
 (K (maybe-get (return-Left-keys_top-GETKEYSIN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-keys_top-GETBIT __global_state __state_length j)
)
)
 (ite (return-Left-keys_top-GETBIT-is-abort __ret)
 (let ((__global_state (return-Left-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Left-keys_top-GETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCN __global_state __state_length (as mk-none (Maybe Bits_m)
)
 true)
)
)
 (let ((__global_state (return-Left-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Left-keys_top-GETBIT-state-length __ret)
)
 (z (maybe-get (return-Left-keys_top-GETBIT-value __ret)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 9 (composition-rand-Left-9 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-9 (select __global_state __state_length)
)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((c (__sample-rand-Left-Bits_m 10 (composition-rand-Left-10 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-10 (select __global_state __state_length)
)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (ite (= d z)
 (let ((unwrap-1 (maybe-get (select K z)
)
)
)
 (let ((c (__func-Left-encn unwrap-1 nzero r)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCN __global_state __state_length (mk-some c)
 false)
)
)
)
 (let ((unwrap-2 (maybe-get (select K z)
)
)
)
 (let ((c (__func-Left-encn unwrap-2 none r)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCN __global_state __state_length (mk-some c)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)

(define-fun oracle-Left-enc-ENCM ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (j Int)
 (d Bool)
 (mzero Bits_m)
 (mone Bits_m)
)
 Return_Left_enc_ENCM (let ((__self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
)
)
 (let ((__ret (oracle-Left-keys_top-GETKEYSIN __global_state __state_length j)
)
)
 (ite (return-Left-keys_top-GETKEYSIN-is-abort __ret)
 (let ((__global_state (return-Left-keys_top-GETKEYSIN-state __ret)
)
 (__state_length (return-Left-keys_top-GETKEYSIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCM __global_state __state_length (as mk-none (Maybe Bits_p)
)
 true)
)
)
 (let ((__global_state (return-Left-keys_top-GETKEYSIN-state __ret)
)
 (__state_length (return-Left-keys_top-GETKEYSIN-state-length __ret)
)
 (K (maybe-get (return-Left-keys_top-GETKEYSIN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-keys_top-GETBIT __global_state __state_length j)
)
)
 (ite (return-Left-keys_top-GETBIT-is-abort __ret)
 (let ((__global_state (return-Left-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Left-keys_top-GETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCM __global_state __state_length (as mk-none (Maybe Bits_p)
)
 true)
)
)
 (let ((__global_state (return-Left-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Left-keys_top-GETBIT-state-length __ret)
)
 (z (maybe-get (return-Left-keys_top-GETBIT-value __ret)
)
)
)
 (let ((r (__sample-rand-Left-Bits_n 11 (composition-rand-Left-11 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-11 (select __global_state __state_length)
)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
 (let ((c (__sample-rand-Left-Bits_p 12 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
)
)
 (ite (= d z)
 (let ((unwrap-1 (maybe-get (select K z)
)
)
)
 (let ((c (__func-Left-encm unwrap-1 mzero r)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCM __global_state __state_length (mk-some c)
 false)
)
)
)
 (let ((unwrap-2 (maybe-get (select K z)
)
)
)
 (let ((c (__func-Left-encm unwrap-2 mone r)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Left-gate (select __global_state __state_length)
)
 __self_state (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-enc-ENCM __global_state __state_length (mk-some c)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)

(define-fun oracle-Left-gate-GBLG ((__global_state (Array Int CompositionState-Left)
)
 (__state_length Int)
 (h Int)
 (l Int)
 (r Int)
 (op (Array (Tuple2 Bool Bool)
 (Maybe Bool)
)
)
 (j Int)
)
 Return_Left_gate_GBLG (let ((__self_state (composition-pkgstate-Left-gate (select __global_state __state_length)
)
)
)
 (let ((C ((as const (Array Bits_p (Maybe Bool)
)
)
 (as mk-none (Maybe Bool)
)
)
)
)
 (let ((__ret (oracle-Left-keys_bottom-GETKEYSOUT __global_state __state_length j)
)
)
 (ite (return-Left-keys_bottom-GETKEYSOUT-is-abort __ret)
 (let ((__global_state (return-Left-keys_bottom-GETKEYSOUT-state __ret)
)
 (__state_length (return-Left-keys_bottom-GETKEYSOUT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-keys_bottom-GETKEYSOUT-state __ret)
)
 (__state_length (return-Left-keys_bottom-GETKEYSOUT-state-length __ret)
)
 (Z (maybe-get (return-Left-keys_bottom-GETKEYSOUT-value __ret)
)
)
)
 (let ((bl false)
)
 (let ((br false)
)
 (let ((unwrap-1 (maybe-get (select op (mk-tuple2 bl br)
)
)
)
)
 (let ((bj unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select Z bj)
)
)
)
 (let ((kzero unwrap-2)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl kzero (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (czeroin (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (conein (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCM __global_state __state_length r br conein czeroin)
)
)
 (ite (return-Left-enc-ENCM-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
 (cout (maybe-get (return-Left-enc-ENCM-value __ret)
)
)
)
 (let ((C ((as const (Array Bits_p (Maybe Bool)
)
)
 (as mk-none (Maybe Bool)
)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((bl true)
)
 (let ((br false)
)
 (let ((unwrap-3 (maybe-get (select op (mk-tuple2 bl br)
)
)
)
)
 (let ((bj unwrap-3)
)
 (let ((unwrap-4 (maybe-get (select Z bj)
)
)
)
 (let ((kzero unwrap-4)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl kzero (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (czeroin (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (conein (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCM __global_state __state_length r br conein czeroin)
)
)
 (ite (return-Left-enc-ENCM-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
 (cout (maybe-get (return-Left-enc-ENCM-value __ret)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((bl false)
)
 (let ((br true)
)
 (let ((unwrap-5 (maybe-get (select op (mk-tuple2 bl br)
)
)
)
)
 (let ((bj unwrap-5)
)
 (let ((unwrap-6 (maybe-get (select Z bj)
)
)
)
 (let ((kzero unwrap-6)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl kzero (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (czeroin (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (conein (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCM __global_state __state_length r br conein czeroin)
)
)
 (ite (return-Left-enc-ENCM-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
 (cout (maybe-get (return-Left-enc-ENCM-value __ret)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((bl true)
)
 (let ((br true)
)
 (let ((unwrap-7 (maybe-get (select op (mk-tuple2 bl br)
)
)
)
)
 (let ((bj unwrap-7)
)
 (let ((unwrap-8 (maybe-get (select Z bj)
)
)
)
 (let ((kzero unwrap-8)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl kzero (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (czeroin (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCN __global_state __state_length l bl (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
)
)
)
 (ite (return-Left-enc-ENCN-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCN-state __ret)
)
 (__state_length (return-Left-enc-ENCN-state-length __ret)
)
 (conein (maybe-get (return-Left-enc-ENCN-value __ret)
)
)
)
 (let ((__ret (oracle-Left-enc-ENCM __global_state __state_length r br conein czeroin)
)
)
 (ite (return-Left-enc-ENCM-is-abort __ret)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Left-enc-ENCM-state __ret)
)
 (__state_length (return-Left-enc-ENCM-state-length __ret)
)
 (cout (maybe-get (return-Left-enc-ENCM-value __ret)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Left (composition-pkgstate-Left-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Left-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Left-enc (select __global_state __state_length)
)
 (composition-param-Left-m (select __global_state __state_length)
)
 (composition-param-Left-n (select __global_state __state_length)
)
 (composition-param-Left-p (select __global_state __state_length)
)
 (composition-param-Left-zerom (select __global_state __state_length)
)
 (composition-param-Left-zeron (select __global_state __state_length)
)
 (composition-rand-Left-0 (select __global_state __state_length)
)
 (composition-rand-Left-1 (select __global_state __state_length)
)
 (composition-rand-Left-2 (select __global_state __state_length)
)
 (composition-rand-Left-3 (select __global_state __state_length)
)
 (composition-rand-Left-4 (select __global_state __state_length)
)
 (composition-rand-Left-5 (select __global_state __state_length)
)
 (composition-rand-Left-6 (select __global_state __state_length)
)
 (composition-rand-Left-7 (select __global_state __state_length)
)
 (composition-rand-Left-8 (select __global_state __state_length)
)
 (composition-rand-Left-9 (select __global_state __state_length)
)
 (composition-rand-Left-10 (select __global_state __state_length)
)
 (composition-rand-Left-11 (select __global_state __state_length)
)
 (composition-rand-Left-12 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Left-gate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)

(declare-fun __sample-rand-Right-Bits_n (Int Int)
 Bits_n)

(declare-fun __func-Right-encm (Bits_n Bits_m Bits_n)
 Bits_p)

(declare-fun __func-Right-encn (Bits_n Bits_n Bits_n)
 Bits_m)

(declare-datatype State_Right_keys_top ((mk-state-Right-keys_top (state-Right-keys_top-T (Array Int (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (state-Right-keys_top-z (Array Int (Maybe Bool)
)
)
 (state-Right-keys_top-flag (Array Int (Maybe Bool)
)
)
)
)
)

(declare-datatype State_Right_keys_bottom ((mk-state-Right-keys_bottom (state-Right-keys_bottom-T (Array Int (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (state-Right-keys_bottom-z (Array Int (Maybe Bool)
)
)
 (state-Right-keys_bottom-flag (Array Int (Maybe Bool)
)
)
)
)
)

(declare-datatype State_Right_simgate ((mk-state-Right-simgate)
)
)

(declare-datatype State_Right_ev ((mk-state-Right-ev)
)
)

(declare-datatype CompositionState-Right ((mk-composition-state-Right (composition-pkgstate-Right-keys_top State_Right_keys_top)
 (composition-pkgstate-Right-keys_bottom State_Right_keys_bottom)
 (composition-pkgstate-Right-simgate State_Right_simgate)
 (composition-pkgstate-Right-ev State_Right_ev)
 (composition-param-Right-m Int)
 (composition-param-Right-n Int)
 (composition-param-Right-p Int)
 (composition-param-Right-zerom Bits_m)
 (composition-param-Right-zeron Bits_n)
 (composition-rand-Right-0 Int)
 (composition-rand-Right-1 Int)
 (composition-rand-Right-2 Int)
 (composition-rand-Right-3 Int)
 (composition-rand-Right-4 Int)
 (composition-rand-Right-5 Int)
 (composition-rand-Right-6 Int)
 (composition-rand-Right-7 Int)
 (composition-rand-Right-8 Int)
 (composition-rand-Right-9 Int)
 (composition-rand-Right-10 Int)
 (composition-rand-Right-11 Int)
 (composition-rand-Right-12 Int)
 (composition-rand-Right-13 Int)
 (composition-rand-Right-14 Int)
 (composition-rand-Right-15 Int)
 (composition-rand-Right-16 Int)
)
)
)

(declare-datatype Return_Right_keys_top_GETKEYSIN ((mk-return-Right-keys_top-GETKEYSIN (return-Right-keys_top-GETKEYSIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETKEYSIN-state-length Int)
 (return-Right-keys_top-GETKEYSIN-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Right-keys_top-GETKEYSIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_GETAIN ((mk-return-Right-keys_top-GETAIN (return-Right-keys_top-GETAIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETAIN-state-length Int)
 (return-Right-keys_top-GETAIN-value (Maybe Bits_n)
)
 (return-Right-keys_top-GETAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_GETINAIN ((mk-return-Right-keys_top-GETINAIN (return-Right-keys_top-GETINAIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETINAIN-state-length Int)
 (return-Right-keys_top-GETINAIN-value (Maybe Bits_n)
)
 (return-Right-keys_top-GETINAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_GETAOUT ((mk-return-Right-keys_top-GETAOUT (return-Right-keys_top-GETAOUT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETAOUT-state-length Int)
 (return-Right-keys_top-GETAOUT-value (Maybe Bits_n)
)
 (return-Right-keys_top-GETAOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_GETKEYSOUT ((mk-return-Right-keys_top-GETKEYSOUT (return-Right-keys_top-GETKEYSOUT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETKEYSOUT-state-length Int)
 (return-Right-keys_top-GETKEYSOUT-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Right-keys_top-GETKEYSOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_GETBIT ((mk-return-Right-keys_top-GETBIT (return-Right-keys_top-GETBIT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-GETBIT-state-length Int)
 (return-Right-keys_top-GETBIT-value (Maybe Bool)
)
 (return-Right-keys_top-GETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_top_SETBIT ((mk-return-Right-keys_top-SETBIT (return-Right-keys_top-SETBIT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_top-SETBIT-state-length Int)
 (return-Right-keys_top-SETBIT-value (Maybe Empty)
)
 (return-Right-keys_top-SETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETKEYSIN ((mk-return-Right-keys_bottom-GETKEYSIN (return-Right-keys_bottom-GETKEYSIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETKEYSIN-state-length Int)
 (return-Right-keys_bottom-GETKEYSIN-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Right-keys_bottom-GETKEYSIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETAIN ((mk-return-Right-keys_bottom-GETAIN (return-Right-keys_bottom-GETAIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETAIN-state-length Int)
 (return-Right-keys_bottom-GETAIN-value (Maybe Bits_n)
)
 (return-Right-keys_bottom-GETAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETINAIN ((mk-return-Right-keys_bottom-GETINAIN (return-Right-keys_bottom-GETINAIN-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETINAIN-state-length Int)
 (return-Right-keys_bottom-GETINAIN-value (Maybe Bits_n)
)
 (return-Right-keys_bottom-GETINAIN-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETAOUT ((mk-return-Right-keys_bottom-GETAOUT (return-Right-keys_bottom-GETAOUT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETAOUT-state-length Int)
 (return-Right-keys_bottom-GETAOUT-value (Maybe Bits_n)
)
 (return-Right-keys_bottom-GETAOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETKEYSOUT ((mk-return-Right-keys_bottom-GETKEYSOUT (return-Right-keys_bottom-GETKEYSOUT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETKEYSOUT-state-length Int)
 (return-Right-keys_bottom-GETKEYSOUT-value (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 (return-Right-keys_bottom-GETKEYSOUT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_GETBIT ((mk-return-Right-keys_bottom-GETBIT (return-Right-keys_bottom-GETBIT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-GETBIT-state-length Int)
 (return-Right-keys_bottom-GETBIT-value (Maybe Bool)
)
 (return-Right-keys_bottom-GETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_keys_bottom_SETBIT ((mk-return-Right-keys_bottom-SETBIT (return-Right-keys_bottom-SETBIT-state (Array Int CompositionState-Right)
)
 (return-Right-keys_bottom-SETBIT-state-length Int)
 (return-Right-keys_bottom-SETBIT-value (Maybe Empty)
)
 (return-Right-keys_bottom-SETBIT-is-abort Bool)
)
)
)

(declare-datatype Return_Right_simgate_GBLG ((mk-return-Right-simgate-GBLG (return-Right-simgate-GBLG-state (Array Int CompositionState-Right)
)
 (return-Right-simgate-GBLG-state-length Int)
 (return-Right-simgate-GBLG-value (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 (return-Right-simgate-GBLG-is-abort Bool)
)
)
)

(declare-datatype Return_Right_ev_EVAL ((mk-return-Right-ev-EVAL (return-Right-ev-EVAL-state (Array Int CompositionState-Right)
)
 (return-Right-ev-EVAL-state-length Int)
 (return-Right-ev-EVAL-value (Maybe Empty)
)
 (return-Right-ev-EVAL-is-abort Bool)
)
)
)

; Composition of Right

(define-fun oracle-Right-keys_top-GETKEYSIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETKEYSIN (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETKEYSIN __global_state __state_length (mk-some Z)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETKEYSIN __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-GETAIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETAIN (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-GETINAIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETINAIN (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_top-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z (not zz)
)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETINAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETINAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-GETAOUT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETAOUT (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_top-z __self_state)
 h)
 (mk-some true)
)
 (let ((__self_state (mk-state-Right-keys_top (state-Right-keys_top-T __self_state)
 (state-Right-keys_top-z __self_state)
 (store (state-Right-keys_top-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Right-keys_top-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Right-Bits_n 1 (composition-rand-Right-1 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-1 (select __global_state __state_length)
)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Right-Bits_n 2 (composition-rand-Right-2 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-2 (select __global_state __state_length)
)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Right-keys_top (store (state-Right-keys_top-T __self_state)
 h (mk-some Z)
)
 (state-Right-keys_top-z __self_state)
 (state-Right-keys_top-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETAOUT __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-GETKEYSOUT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETKEYSOUT (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Right-keys_top-flag __self_state)
 h)
 (mk-some true)
)
)
 (let ((__self_state (mk-state-Right-keys_top (state-Right-keys_top-T __self_state)
 (state-Right-keys_top-z __self_state)
 (store (state-Right-keys_top-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Right-keys_top-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Right-Bits_n 3 (composition-rand-Right-3 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-3 (select __global_state __state_length)
)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Right-Bits_n 4 (composition-rand-Right-4 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-4 (select __global_state __state_length)
)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Right-keys_top (store (state-Right-keys_top-T __self_state)
 h (mk-some Z)
)
 (state-Right-keys_top-z __self_state)
 (state-Right-keys_top-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETKEYSOUT __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-GETBIT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_top_GETBIT (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Right-keys_top-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_top-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETBIT __global_state __state_length (mk-some zz)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-GETBIT __global_state __state_length (as mk-none (Maybe Bool)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_top-SETBIT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
 (zz Bool)
)
 Return_Right_keys_top_SETBIT (let ((__self_state (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_top-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
 (let ((__self_state (mk-state-Right-keys_top (state-Right-keys_top-T __self_state)
 (store (state-Right-keys_top-z __self_state)
 h (mk-some zz)
)
 (state-Right-keys_top-flag __self_state)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-SETBIT __global_state __state_length (mk-some mk-empty)
 false)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right __self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_top-SETBIT __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETKEYSIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETKEYSIN (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETKEYSIN __global_state __state_length (mk-some Z)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETKEYSIN __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETAIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETAIN (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETINAIN ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETINAIN (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z (not zz)
)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETINAIN __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETINAIN __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETAOUT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETAOUT (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Right-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((__self_state (mk-state-Right-keys_bottom (state-Right-keys_bottom-T __self_state)
 (state-Right-keys_bottom-z __self_state)
 (store (state-Right-keys_bottom-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Right-keys_bottom-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Right-Bits_n 5 (composition-rand-Right-5 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-5 (select __global_state __state_length)
)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Right-Bits_n 6 (composition-rand-Right-6 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-6 (select __global_state __state_length)
)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Right-keys_bottom (store (state-Right-keys_bottom-T __self_state)
 h (mk-some Z)
)
 (state-Right-keys_bottom-z __self_state)
 (state-Right-keys_bottom-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select (state-Right-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-2)
)
 (let ((unwrap-3 (maybe-get (select Z zz)
)
)
)
 (let ((k unwrap-3)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETAOUT __global_state __state_length (mk-some k)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETAOUT __global_state __state_length (as mk-none (Maybe Bits_n)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETKEYSOUT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETKEYSOUT (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Right-keys_bottom-flag __self_state)
 h)
 (mk-some true)
)
)
 (let ((__self_state (mk-state-Right-keys_bottom (state-Right-keys_bottom-T __self_state)
 (state-Right-keys_bottom-z __self_state)
 (store (state-Right-keys_bottom-flag __self_state)
 h (mk-some true)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (ite (= (select (state-Right-keys_bottom-T __self_state)
 h)
 (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
)
 (let ((r (__sample-rand-Right-Bits_n 7 (composition-rand-Right-7 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-7 (select __global_state __state_length)
)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Z (store Z true (mk-some r)
)
)
)
 (let ((rr (__sample-rand-Right-Bits_n 8 (composition-rand-Right-8 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-8 (select __global_state __state_length)
)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((Z (store Z false (mk-some rr)
)
)
)
 (let ((__self_state (mk-state-Right-keys_bottom (store (state-Right-keys_bottom-T __self_state)
 h (mk-some Z)
)
 (state-Right-keys_bottom-z __self_state)
 (state-Right-keys_bottom-flag __self_state)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
)
)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-T __self_state)
 h)
)
)
)
 (let ((Z unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETKEYSOUT __global_state __state_length (mk-some Z)
 false)
)
)
)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETKEYSOUT __global_state __state_length (as mk-none (Maybe (Array Bool (Maybe Bits_n)
)
)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-GETBIT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
)
 Return_Right_keys_bottom_GETBIT (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (not (= (select (state-Right-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
)
 (let ((unwrap-1 (maybe-get (select (state-Right-keys_bottom-z __self_state)
 h)
)
)
)
 (let ((zz unwrap-1)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETBIT __global_state __state_length (mk-some zz)
 false)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-GETBIT __global_state __state_length (as mk-none (Maybe Bool)
)
 true)
)
)
)
)

(define-fun oracle-Right-keys_bottom-SETBIT ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
 (zz Bool)
)
 Return_Right_keys_bottom_SETBIT (let ((__self_state (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
)
)
 (ite (= (select (state-Right-keys_bottom-z __self_state)
 h)
 (as mk-none (Maybe Bool)
)
)
 (let ((__self_state (mk-state-Right-keys_bottom (state-Right-keys_bottom-T __self_state)
 (store (state-Right-keys_bottom-z __self_state)
 h (mk-some zz)
)
 (state-Right-keys_bottom-flag __self_state)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-SETBIT __global_state __state_length (mk-some mk-empty)
 false)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-keys_bottom-SETBIT __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
)
)

(define-fun oracle-Right-ev-EVAL ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (j Int)
 (l Int)
 (r Int)
 (op (Array (Tuple2 Bool Bool)
 (Maybe Bool)
)
)
)
 Return_Right_ev_EVAL (let ((__self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
)
)
 (let ((__ret (oracle-Right-keys_top-GETBIT __global_state __state_length l)
)
)
 (ite (return-Right-keys_top-GETBIT-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Right-keys_top-GETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 __self_state (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-ev-EVAL __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Right-keys_top-GETBIT-state-length __ret)
)
 (zl (maybe-get (return-Right-keys_top-GETBIT-value __ret)
)
)
)
 (let ((__ret (oracle-Right-keys_top-GETBIT __global_state __state_length r)
)
)
 (ite (return-Right-keys_top-GETBIT-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Right-keys_top-GETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 __self_state (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-ev-EVAL __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETBIT-state __ret)
)
 (__state_length (return-Right-keys_top-GETBIT-state-length __ret)
)
 (zr (maybe-get (return-Right-keys_top-GETBIT-value __ret)
)
)
)
 (let ((unwrap-1 (maybe-get (select op (mk-tuple2 zl zr)
)
)
)
)
 (let ((z unwrap-1)
)
 (let ((__ret (oracle-Right-keys_bottom-SETBIT __global_state __state_length j z)
)
)
 (ite (return-Right-keys_bottom-SETBIT-is-abort __ret)
 (let ((__global_state (return-Right-keys_bottom-SETBIT-state __ret)
)
 (__state_length (return-Right-keys_bottom-SETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 __self_state (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-ev-EVAL __global_state __state_length (as mk-none (Maybe Empty)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_bottom-SETBIT-state __ret)
)
 (__state_length (return-Right-keys_bottom-SETBIT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 __self_state (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-ev-EVAL __global_state __state_length (mk-some mk-empty)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)

(define-fun oracle-Right-simgate-GBLG ((__global_state (Array Int CompositionState-Right)
)
 (__state_length Int)
 (h Int)
 (l Int)
 (r Int)
 (op (Array (Tuple2 Bool Bool)
 (Maybe Bool)
)
)
 (j Int)
)
 Return_Right_simgate_GBLG (let ((__self_state (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
)
)
 (let ((C ((as const (Array Bits_p (Maybe Bool)
)
)
 (as mk-none (Maybe Bool)
)
)
)
)
 (let ((Sl ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Sr ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Sj ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((__ret (oracle-Right-ev-EVAL __global_state __state_length j l r op)
)
)
 (ite (return-Right-ev-EVAL-is-abort __ret)
 (let ((__global_state (return-Right-ev-EVAL-state __ret)
)
 (__state_length (return-Right-ev-EVAL-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-ev-EVAL-state __ret)
)
 (__state_length (return-Right-ev-EVAL-state-length __ret)
)
)
 (let ((__ret (oracle-Right-keys_top-GETAIN __global_state __state_length l)
)
)
 (ite (return-Right-keys_top-GETAIN-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETAIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETAIN-state-length __ret)
)
 (temp (maybe-get (return-Right-keys_top-GETAIN-value __ret)
)
)
)
 (let ((Sl ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Sl (store Sl true (mk-some temp)
)
)
)
 (let ((__ret (oracle-Right-keys_top-GETINAIN __global_state __state_length l)
)
)
 (ite (return-Right-keys_top-GETINAIN-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETINAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETINAIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETINAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETINAIN-state-length __ret)
)
 (temp (maybe-get (return-Right-keys_top-GETINAIN-value __ret)
)
)
)
 (let ((Sl (store Sl false (mk-some temp)
)
)
)
 (let ((__ret (oracle-Right-keys_top-GETAIN __global_state __state_length r)
)
)
 (ite (return-Right-keys_top-GETAIN-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETAIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETAIN-state-length __ret)
)
 (temp (maybe-get (return-Right-keys_top-GETAIN-value __ret)
)
)
)
 (let ((Sr ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Sr (store Sr true (mk-some temp)
)
)
)
 (let ((__ret (oracle-Right-keys_top-GETINAIN __global_state __state_length r)
)
)
 (ite (return-Right-keys_top-GETINAIN-is-abort __ret)
 (let ((__global_state (return-Right-keys_top-GETINAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETINAIN-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_top-GETINAIN-state __ret)
)
 (__state_length (return-Right-keys_top-GETINAIN-state-length __ret)
)
 (temp (maybe-get (return-Right-keys_top-GETINAIN-value __ret)
)
)
)
 (let ((Sr (store Sr true (mk-some temp)
)
)
)
 (let ((__ret (oracle-Right-keys_bottom-GETAOUT __global_state __state_length j)
)
)
 (ite (return-Right-keys_bottom-GETAOUT-is-abort __ret)
 (let ((__global_state (return-Right-keys_bottom-GETAOUT-state __ret)
)
 (__state_length (return-Right-keys_bottom-GETAOUT-state-length __ret)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (as mk-none (Maybe (Array Bits_p (Maybe Bool)
)
)
)
 true)
)
)
 (let ((__global_state (return-Right-keys_bottom-GETAOUT-state __ret)
)
 (__state_length (return-Right-keys_bottom-GETAOUT-state-length __ret)
)
 (temp (maybe-get (return-Right-keys_bottom-GETAOUT-value __ret)
)
)
)
 (let ((Sj ((as const (Array Bool (Maybe Bits_n)
)
)
 (as mk-none (Maybe Bits_n)
)
)
)
)
 (let ((Sj (store Sj false (mk-some temp)
)
)
)
 (let ((dl false)
)
 (let ((dr false)
)
 (let ((unwrap-1 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-1)
)
 (let ((unwrap-2 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-2)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-3 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-3)
)
 (let ((rin (__sample-rand-Right-Bits_n 9 (composition-rand-Right-9 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-9 (select __global_state __state_length)
)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 10 (composition-rand-Right-10 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-10 (select __global_state __state_length)
)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C ((as const (Array Bits_p (Maybe Bool)
)
)
 (as mk-none (Maybe Bool)
)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr false)
)
 (let ((unwrap-4 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-4)
)
 (let ((unwrap-5 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-5)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-6 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-6)
)
 (let ((rin (__sample-rand-Right-Bits_n 11 (composition-rand-Right-11 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-11 (select __global_state __state_length)
)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 12 (composition-rand-Right-12 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-12 (select __global_state __state_length)
)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl false)
)
 (let ((dr true)
)
 (let ((unwrap-7 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-7)
)
 (let ((unwrap-8 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-8)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-9 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-9)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 11 (composition-rand-Right-11 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-11 (select __global_state __state_length)
)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 12 (composition-rand-Right-12 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-12 (select __global_state __state_length)
)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl false)
)
 (let ((dr true)
)
 (let ((unwrap-7 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-7)
)
 (let ((unwrap-8 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-8)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-9 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-9)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 9 (composition-rand-Right-9 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-9 (select __global_state __state_length)
)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 10 (composition-rand-Right-10 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-10 (select __global_state __state_length)
)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C ((as const (Array Bits_p (Maybe Bool)
)
)
 (as mk-none (Maybe Bool)
)
)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr false)
)
 (let ((unwrap-4 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-4)
)
 (let ((unwrap-5 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-5)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-6 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-6)
)
 (let ((rin (__sample-rand-Right-Bits_n 11 (composition-rand-Right-11 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-11 (select __global_state __state_length)
)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 12 (composition-rand-Right-12 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-12 (select __global_state __state_length)
)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl false)
)
 (let ((dr true)
)
 (let ((unwrap-7 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-7)
)
 (let ((unwrap-8 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-8)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-9 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-9)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 11 (composition-rand-Right-11 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-11 (select __global_state __state_length)
)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 12 (composition-rand-Right-12 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-12 (select __global_state __state_length)
)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl false)
)
 (let ((dr true)
)
 (let ((unwrap-7 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-7)
)
 (let ((unwrap-8 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-8)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-9 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-9)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 13 (composition-rand-Right-13 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-13 (select __global_state __state_length)
)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 14 (composition-rand-Right-14 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-14 (select __global_state __state_length)
)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((dl true)
)
 (let ((dr true)
)
 (let ((unwrap-10 (maybe-get (select Sl dl)
)
)
)
 (let ((kl unwrap-10)
)
 (let ((unwrap-11 (maybe-get (select Sr dr)
)
)
)
 (let ((kr unwrap-11)
)
 (let ((kj (composition-param-Right-zeron (select __global_state __state_length)
)
)
)
 (ite (and (or (not dl)
)
 (or (not dr)
)
)
 (let ((unwrap-12 (maybe-get (select Sj false)
)
)
)
 (let ((kj unwrap-12)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
 (let ((rin (__sample-rand-Right-Bits_n 15 (composition-rand-Right-15 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-15 (select __global_state __state_length)
)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
 (let ((rout (__sample-rand-Right-Bits_n 16 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (let ((__global_state (store __global_state __state_length (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 (composition-pkgstate-Right-simgate (select __global_state __state_length)
)
 (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (+ 1 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
)
)
 (let ((cin (__func-Right-encn kr kj rin)
)
)
 (let ((cout (__func-Right-encm kl cin rout)
)
)
 (let ((C (store C cout (mk-some true)
)
)
)
 (let ((__global_state (store __global_state (+ 1 __state_length)
 (mk-composition-state-Right (composition-pkgstate-Right-keys_top (select __global_state __state_length)
)
 (composition-pkgstate-Right-keys_bottom (select __global_state __state_length)
)
 __self_state (composition-pkgstate-Right-ev (select __global_state __state_length)
)
 (composition-param-Right-m (select __global_state __state_length)
)
 (composition-param-Right-n (select __global_state __state_length)
)
 (composition-param-Right-p (select __global_state __state_length)
)
 (composition-param-Right-zerom (select __global_state __state_length)
)
 (composition-param-Right-zeron (select __global_state __state_length)
)
 (composition-rand-Right-0 (select __global_state __state_length)
)
 (composition-rand-Right-1 (select __global_state __state_length)
)
 (composition-rand-Right-2 (select __global_state __state_length)
)
 (composition-rand-Right-3 (select __global_state __state_length)
)
 (composition-rand-Right-4 (select __global_state __state_length)
)
 (composition-rand-Right-5 (select __global_state __state_length)
)
 (composition-rand-Right-6 (select __global_state __state_length)
)
 (composition-rand-Right-7 (select __global_state __state_length)
)
 (composition-rand-Right-8 (select __global_state __state_length)
)
 (composition-rand-Right-9 (select __global_state __state_length)
)
 (composition-rand-Right-10 (select __global_state __state_length)
)
 (composition-rand-Right-11 (select __global_state __state_length)
)
 (composition-rand-Right-12 (select __global_state __state_length)
)
 (composition-rand-Right-13 (select __global_state __state_length)
)
 (composition-rand-Right-14 (select __global_state __state_length)
)
 (composition-rand-Right-15 (select __global_state __state_length)
)
 (composition-rand-Right-16 (select __global_state __state_length)
)
)
)
)
 (__state_length (+ 1 __state_length)
)
)
 (mk-return-Right-simgate-GBLG __global_state __state_length (mk-some C)
 false)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)

(check-sat)
(declare-const state-left (Array Int CompositionState-Left)
)

(declare-const state-right (Array Int CompositionState-Right)
)

(declare-const state-length-left-old Int)
(declare-const state-length-left-new Int)
(declare-const state-length-right-old Int)
(declare-const state-length-right-new Int)
(declare-const arg-GETAOUT-h Int)
(declare-const arg-SETBIT-h Int)
(declare-const arg-SETBIT-zz Bool)
(declare-const arg-GBLG-h Int)
(declare-const arg-GBLG-l Int)
(declare-const arg-GBLG-r Int)
(declare-const arg-GBLG-op (Array (Tuple2 Bool Bool)
 (Maybe Bool)
)
)
(declare-const arg-GBLG-j Int)
(declare-const arg-GETKEYSIN-h Int)
(declare-const return-left-keys_top-GETAOUT Return_Left_keys_top_GETAOUT)
(assert (= return-left-keys_top-GETAOUT (oracle-Left-keys_top-GETAOUT state-left state-length-left-old arg-GETAOUT-h)
)
)
(declare-const return-left-keys_top-SETBIT Return_Left_keys_top_SETBIT)
(assert (= return-left-keys_top-SETBIT (oracle-Left-keys_top-SETBIT state-left state-length-left-old arg-SETBIT-h arg-SETBIT-zz)
)
)
(declare-const return-left-gate-GBLG Return_Left_gate_GBLG)
(assert (= return-left-gate-GBLG (oracle-Left-gate-GBLG state-left state-length-left-old arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
(declare-const return-left-keys_bottom-GETKEYSIN Return_Left_keys_bottom_GETKEYSIN)
(assert (= return-left-keys_bottom-GETKEYSIN (oracle-Left-keys_bottom-GETKEYSIN state-left state-length-left-old arg-GETKEYSIN-h)
)
)
(declare-const return-right-keys_top-GETAOUT Return_Right_keys_top_GETAOUT)
(assert (= return-right-keys_top-GETAOUT (oracle-Right-keys_top-GETAOUT state-right state-length-right-old arg-GETAOUT-h)
)
)
(declare-const return-right-keys_top-SETBIT Return_Right_keys_top_SETBIT)
(assert (= return-right-keys_top-SETBIT (oracle-Right-keys_top-SETBIT state-right state-length-right-old arg-SETBIT-h arg-SETBIT-zz)
)
)
(declare-const return-right-simgate-GBLG Return_Right_simgate_GBLG)
(assert (= return-right-simgate-GBLG (oracle-Right-simgate-GBLG state-right state-length-right-old arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
(declare-const return-right-keys_bottom-GETKEYSIN Return_Right_keys_bottom_GETKEYSIN)
(assert (= return-right-keys_bottom-GETKEYSIN (oracle-Right-keys_bottom-GETKEYSIN state-right state-length-right-old arg-GETKEYSIN-h)
)
)
(declare-const randctr-left-1 Int)
(assert (= randctr-left-1 (composition-rand-Left-1 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-1 Bits_n)
(assert (= randval-left-1 (__sample-rand-Left-Bits_n 1 (+ 0 randctr-left-1)
)
)
)
(declare-const randctr-left-2 Int)
(assert (= randctr-left-2 (composition-rand-Left-2 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-2 Bits_n)
(assert (= randval-left-2 (__sample-rand-Left-Bits_n 2 (+ 0 randctr-left-2)
)
)
)
(declare-const randctr-left-3 Int)
(assert (= randctr-left-3 (composition-rand-Left-3 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-3 Bits_n)
(assert (= randval-left-3 (__sample-rand-Left-Bits_n 3 (+ 0 randctr-left-3)
)
)
)
(declare-const randctr-left-4 Int)
(assert (= randctr-left-4 (composition-rand-Left-4 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-4 Bits_n)
(assert (= randval-left-4 (__sample-rand-Left-Bits_n 4 (+ 0 randctr-left-4)
)
)
)
(declare-const randctr-left-5 Int)
(assert (= randctr-left-5 (composition-rand-Left-5 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-5 Bits_n)
(assert (= randval-left-5 (__sample-rand-Left-Bits_n 5 (+ 0 randctr-left-5)
)
)
)
(declare-const randctr-left-6 Int)
(assert (= randctr-left-6 (composition-rand-Left-6 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-6 Bits_n)
(assert (= randval-left-6 (__sample-rand-Left-Bits_n 6 (+ 0 randctr-left-6)
)
)
)
(declare-const randctr-left-7 Int)
(assert (= randctr-left-7 (composition-rand-Left-7 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-7 Bits_n)
(assert (= randval-left-7 (__sample-rand-Left-Bits_n 7 (+ 0 randctr-left-7)
)
)
)
(declare-const randctr-left-8 Int)
(assert (= randctr-left-8 (composition-rand-Left-8 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-8 Bits_n)
(assert (= randval-left-8 (__sample-rand-Left-Bits_n 8 (+ 0 randctr-left-8)
)
)
)
(declare-const randctr-left-9 Int)
(assert (= randctr-left-9 (composition-rand-Left-9 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-9 Bits_n)
(assert (= randval-left-9 (__sample-rand-Left-Bits_n 9 (+ 0 randctr-left-9)
)
)
)
(declare-const randctr-left-10 Int)
(assert (= randctr-left-10 (composition-rand-Left-10 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-10 Bits_m)
(assert (= randval-left-10 (__sample-rand-Left-Bits_m 10 (+ 0 randctr-left-10)
)
)
)
(declare-const randctr-left-11 Int)
(assert (= randctr-left-11 (composition-rand-Left-11 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-11 Bits_n)
(assert (= randval-left-11 (__sample-rand-Left-Bits_n 11 (+ 0 randctr-left-11)
)
)
)
(declare-const randctr-left-12 Int)
(assert (= randctr-left-12 (composition-rand-Left-12 (select state-left state-length-left-old)
)
)
)
(declare-const randval-left-12 Bits_p)
(assert (= randval-left-12 (__sample-rand-Left-Bits_p 12 (+ 0 randctr-left-12)
)
)
)
(declare-const randctr-right-1 Int)
(assert (= randctr-right-1 (composition-rand-Right-1 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-1 Bits_n)
(assert (= randval-right-1 (__sample-rand-Right-Bits_n 1 (+ 0 randctr-right-1)
)
)
)
(declare-const randctr-right-2 Int)
(assert (= randctr-right-2 (composition-rand-Right-2 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-2 Bits_n)
(assert (= randval-right-2 (__sample-rand-Right-Bits_n 2 (+ 0 randctr-right-2)
)
)
)
(declare-const randctr-right-3 Int)
(assert (= randctr-right-3 (composition-rand-Right-3 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-3 Bits_n)
(assert (= randval-right-3 (__sample-rand-Right-Bits_n 3 (+ 0 randctr-right-3)
)
)
)
(declare-const randctr-right-4 Int)
(assert (= randctr-right-4 (composition-rand-Right-4 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-4 Bits_n)
(assert (= randval-right-4 (__sample-rand-Right-Bits_n 4 (+ 0 randctr-right-4)
)
)
)
(declare-const randctr-right-5 Int)
(assert (= randctr-right-5 (composition-rand-Right-5 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-5 Bits_n)
(assert (= randval-right-5 (__sample-rand-Right-Bits_n 5 (+ 0 randctr-right-5)
)
)
)
(declare-const randctr-right-6 Int)
(assert (= randctr-right-6 (composition-rand-Right-6 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-6 Bits_n)
(assert (= randval-right-6 (__sample-rand-Right-Bits_n 6 (+ 0 randctr-right-6)
)
)
)
(declare-const randctr-right-7 Int)
(assert (= randctr-right-7 (composition-rand-Right-7 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-7 Bits_n)
(assert (= randval-right-7 (__sample-rand-Right-Bits_n 7 (+ 0 randctr-right-7)
)
)
)
(declare-const randctr-right-8 Int)
(assert (= randctr-right-8 (composition-rand-Right-8 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-8 Bits_n)
(assert (= randval-right-8 (__sample-rand-Right-Bits_n 8 (+ 0 randctr-right-8)
)
)
)
(declare-const randctr-right-9 Int)
(assert (= randctr-right-9 (composition-rand-Right-9 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-9 Bits_n)
(assert (= randval-right-9 (__sample-rand-Right-Bits_n 9 (+ 0 randctr-right-9)
)
)
)
(declare-const randctr-right-10 Int)
(assert (= randctr-right-10 (composition-rand-Right-10 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-10 Bits_n)
(assert (= randval-right-10 (__sample-rand-Right-Bits_n 10 (+ 0 randctr-right-10)
)
)
)
(declare-const randctr-right-11 Int)
(assert (= randctr-right-11 (composition-rand-Right-11 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-11 Bits_n)
(assert (= randval-right-11 (__sample-rand-Right-Bits_n 11 (+ 0 randctr-right-11)
)
)
)
(declare-const randctr-right-12 Int)
(assert (= randctr-right-12 (composition-rand-Right-12 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-12 Bits_n)
(assert (= randval-right-12 (__sample-rand-Right-Bits_n 12 (+ 0 randctr-right-12)
)
)
)
(declare-const randctr-right-13 Int)
(assert (= randctr-right-13 (composition-rand-Right-13 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-13 Bits_n)
(assert (= randval-right-13 (__sample-rand-Right-Bits_n 13 (+ 0 randctr-right-13)
)
)
)
(declare-const randctr-right-14 Int)
(assert (= randctr-right-14 (composition-rand-Right-14 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-14 Bits_n)
(assert (= randval-right-14 (__sample-rand-Right-Bits_n 14 (+ 0 randctr-right-14)
)
)
)
(declare-const randctr-right-15 Int)
(assert (= randctr-right-15 (composition-rand-Right-15 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-15 Bits_n)
(assert (= randval-right-15 (__sample-rand-Right-Bits_n 15 (+ 0 randctr-right-15)
)
)
)
(declare-const randctr-right-16 Int)
(assert (= randctr-right-16 (composition-rand-Right-16 (select state-right state-length-right-old)
)
)
)
(declare-const randval-right-16 Bits_n)
(assert (= randval-right-16 (__sample-rand-Right-Bits_n 16 (+ 0 randctr-right-16)
)
)
)
(check-sat)
(assert
(and
(= state-length-left-old 1)
(= state-length-right-old 1)
)
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   Randomness naming
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(declare-const randval-left-9+1 Bits_n)
(assert (= randval-left-9+1 (__sample-rand-Left-Bits_n 9 (+ 1 randctr-left-9)
)))

(declare-const randval-left-9+2 Bits_n)
(assert (= randval-left-9+2 (__sample-rand-Left-Bits_n 9 (+ 2 randctr-left-9)
)))

(declare-const randval-left-9+3 Bits_n)
(assert (= randval-left-9+3 (__sample-rand-Left-Bits_n 9 (+ 3 randctr-left-9)
)))

(declare-const randval-left-11+1 Bits_n)
(assert (= randval-left-11+1 (__sample-rand-Left-Bits_n 11 (+ 1 randctr-left-11)
)))

(declare-const randval-left-11+2 Bits_n)
(assert (= randval-left-11+2 (__sample-rand-Left-Bits_n 11 (+ 2 randctr-left-11)
)))

(declare-const randval-left-11+3 Bits_n)
(assert (= randval-left-11+3 (__sample-rand-Left-Bits_n 11 (+ 3 randctr-left-11)
)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   Randomness mapping
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(define-fun randomness-mapping-GBLG () Bool
(and
;equality of values of the sample functions for the lower Key package
(= randval-left-5    randval-right-7)
(= randval-left-6    randval-right-8)

;equality of values of the sample functions for the encryptions
(= randval-left-9    randval-right-9)
(= randval-left-11   randval-right-10)
(= randval-left-9+1  randval-right-11)
(= randval-left-11+1 randval-right-12)
(= randval-left-9+2  randval-right-11)
(= randval-left-11+2 randval-right-12)
(= randval-left-9+3  randval-right-13)
(= randval-left-11+3 randval-right-14)
)
)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   op is total (special-purpose glue)
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(assert
(and
(not (= (select arg-GBLG-op (mk-tuple2 true  true ))(as mk-none (Maybe Bool))))
(not (= (select arg-GBLG-op (mk-tuple2 true  false))(as mk-none (Maybe Bool))))
(not (= (select arg-GBLG-op (mk-tuple2 false true ))(as mk-none (Maybe Bool))))
(not (= (select arg-GBLG-op (mk-tuple2 false false))(as mk-none (Maybe Bool))))
))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   Datatypes to extract key package state
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(declare-datatype
  State_keys
  (
    (mk-state-keys
      (state-keys-T (Array Int (Maybe (Array Bool (Maybe Bits_n)))))
      (state-keys-z (Array Int (Maybe Bool)))
      (state-keys-flag (Array Int (Maybe Bool))))))

(define-fun project-State_Left_keys_top ((in State_Left_keys_top)) State_keys
  (mk-state-keys (state-Left-keys_top-T    in)
                 (state-Left-keys_top-z    in)
                 (state-Left-keys_top-flag in)))

(define-fun project-State_Right_keys_top ((in State_Right_keys_top)) State_keys
  (mk-state-keys (state-Right-keys_top-T    in)
                 (state-Right-keys_top-z    in)
                 (state-Right-keys_top-flag in)))

(define-fun project-State_Left_keys_bottom ((in State_Left_keys_bottom)) State_keys
  (mk-state-keys (state-Left-keys_bottom-T    in)
                 (state-Left-keys_bottom-z    in)
                 (state-Left-keys_bottom-flag in)))

(define-fun project-State_Right_keys_bottom ((in State_Right_keys_bottom)) State_keys
  (mk-state-keys (state-Right-keys_bottom-T    in)
                 (state-Right-keys_bottom-z    in)
                 (state-Right-keys_bottom-flag in)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   Well-definedness of tables
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;If T h != none => T h b != none (for both b=0 and b=1)

(define-fun well-defined ((T (Array Int (Maybe (Array Bool (Maybe Bits_n)))))) Bool
  (forall ((h Int))
    (or
      (= (select T h) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
      (forall ((b Bool))
        (not
          (= (select (maybe-get (select T h)) b) (as mk-none (Maybe Bits_n)))
)))))

; captures the possible states which a Key package can be in when
; the "top" queries are GETKEYS queries 
;
(define-fun well-defined-Key-bool ((key-state State_keys)) Bool
(let ((T    (state-keys-T    key-state))
      (flag (state-keys-flag key-state))
      (z    (state-keys-z    key-state)))

; flag is true <=> key has been chosen 
(and

;If T h != none => T h b != none (for both b=0 and b=1)
(well-defined T)

(forall ((hhh Int))
(or
    (= (select flag hhh) (as mk-none (Maybe Bool)))
    (= (select flag hhh) (   mk-some        true )))
)

;If flag h != true => T h  = none
;If flag h  = true => T h != none (for both b=0 and b=1)

(forall ((hhh Int)) 
(and 
(=>
    (not (= (select flag hhh) (mk-some true)))
    (= (select T hhh) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
)
(=>
    (= (select flag hhh) (mk-some true))
    (and
       (not (= (select T hhh)                            (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
       (not (= (select (maybe-get (select T hhh)) true ) (as mk-none (Maybe Bits_n))))
       (not (= (select (maybe-get (select T hhh)) false) (as mk-none (Maybe Bits_n))))
    )
))))))

; captures the possible states which a Key package can be in when
; the "top" queries are GETA and SETBIT queries 
;
(define-fun well-defined-Key-active ((key-state State_keys)) Bool
(let ((T    (state-keys-T    key-state))
      (flag (state-keys-flag key-state))
      (z    (state-keys-z    key-state)))

(and

;If T h != none => T h b != none (for both b=0 and b=1)
(well-defined T)

(forall ((hhh Int))
(or
  (= (select flag hhh) (as mk-none (Maybe Bool)))
  (= (select flag hhh) (   mk-some        true ))))

; flag has been set  => bit has been set
(forall ((hhh Int)) (=> (=  (mk-some true ) (select flag hhh))  
                    (or (=  (mk-some true ) (select z    hhh))
                        (=  (mk-some false) (select z    hhh))
                    )))

; key has been set => flag has been set
(forall ((hhh Int)) (=>
                    (not
                    (= (select T hhh) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
                    )
                    (= (select flag hhh) (mk-some true)))
                    ))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; Invariant
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; This is supposed to be an invariant
(define-fun invariant-GBLG          (
        (state-left  (Array Int CompositionState-Left ))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ;old index
        (state-length-right Int) ;old index
        (state-left-new  Return_Left_gate_GBLG)
        (state-right-new Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
    Bool
    (let

; state of the key packages
(
(top-key-package-left  (project-State_Left_keys_top      (composition-pkgstate-Left-keys_top     (select state-left  state-length-left))))
(top-key-package-right (project-State_Right_keys_top     (composition-pkgstate-Right-keys_top    (select state-right state-length-right))))
(bot-key-package-left  (project-State_Left_keys_bottom   (composition-pkgstate-Left-keys_bottom  (select state-left  state-length-left))))
(bot-key-package-right (project-State_Right_keys_bottom  (composition-pkgstate-Right-keys_bottom (select state-right state-length-right))))
)

(let

; table of the bottom key package
(
(table-bot-left  (state-keys-T    bot-key-package-left))
(table-bot-right (state-keys-T    bot-key-package-right))
(    z-bot-left  (state-keys-z    bot-key-package-left))
(    z-bot-right (state-keys-z    bot-key-package-right))
(flag-bot-left   (state-keys-flag bot-key-package-left))
(flag-bot-right  (state-keys-flag bot-key-package-right))
)

(and
;top key package states are equal
(= top-key-package-left top-key-package-right)

;for bottom key package, tables are equal
(= table-bot-left table-bot-right)

;top key package state is "good"
(well-defined-Key-active top-key-package-left )
(well-defined-Key-active top-key-package-right)

;bottom key packages state is "good"
(well-defined-Key-bool   bot-key-package-left )
(well-defined-Key-active bot-key-package-right)
(forall ((h Int))
(and
    (= (select  flag-bot-left  h) 
       (select  flag-bot-right h))
(=> (= (select table-bot-left  h) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
    (= (select  flag-bot-left  h) (   mk-some        false)))
(=> (= (select table-bot-right h) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
    (and
    (= (select  flag-bot-right h) (   mk-some        false))
    (= (select     z-bot-right h) (as mk-none (Maybe Bool )))))
(=> (= (select  flag-bot-right h) (   mk-some        false))
    (= (select     z-bot-right h) (as mk-none (Maybe Bool ))))
))))))






;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    LEFT aborts
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



(define-fun left-all-aborts          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left Int)  ; old index
        (state-length-right Int) ; old index
        (state-left-NEU Return_Left_gate_GBLG)      
        (state-right-NEU Return_Right_simgate_GBLG) 
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                1))
    )

  (let

; state of the key packages
(
(top-key-package-left-1     (project-State_Left_keys_top     (composition-pkgstate-Left-keys_top     state-left-1)))
(bottom-key-package-left-1  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-1)))
)

(let

; table of the top key package
;        T: Table(Integer,Table(Bool,Bits(n))),
;        z: Table(Integer,Bool),
(
(T-top-left-1        (state-keys-T       top-key-package-left-1))
(z-top-left-1        (state-keys-z       top-key-package-left-1))
(flag-top-left-1     (state-keys-flag    top-key-package-left-1))
(flag-bot-left-1     (state-keys-flag bottom-key-package-left-1))
)

;;; if l is undefined, then abort
(=>
(or
(= (select    z-top-left-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 l)    (mk-some        false))
(= (select    z-top-left-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 r)    (mk-some        false))
(= (select flag-bot-left-1 j)    (mk-some        true ))
)
(= (return-Left-gate-GBLG-is-abort state-left-NEU) true)
)))))

(define-fun left-inverse-all-aborts          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index
        (state-length-right Int) ; old index
        (state-left-NEU  Return_Left_gate_GBLG)      
        (state-right-NEU Return_Right_simgate_GBLG) 
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                1))
    )

  (let

; state of the key packages
(
(top-key-package-left-1     (project-State_Left_keys_top     (composition-pkgstate-Left-keys_top     state-left-1)))
(bottom-key-package-left-1  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-1)))
;(top-key-package-left-2     (project-State_Left_keys_top  (composition-pkgstate-Left-keys_top state-left-2)))
)

(let

; table of the top key package
;        T: Table(Integer,Table(Bool,Bits(n))),
;        z: Table(Integer,Bool),
(
(T-top-left-1        (state-keys-T    top-key-package-left-1))
(z-top-left-1        (state-keys-z    top-key-package-left-1))
(flag-top-left-1     (state-keys-flag top-key-package-left-1))
(flag-bot-left-1  (state-keys-flag bottom-key-package-left-1))
)

;;; abort => z[l] or z[r] is undefined or flag[j]=true
(=>
(= (return-Left-gate-GBLG-is-abort state-left-NEU) true)
(or
(= (select    z-top-left-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 l)    (mk-some        false))
(= (select    z-top-left-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-left-1 r)    (mk-some        false))
(= (select flag-bot-left-1 j)    (mk-some        true ))
)
)))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    RIGHT aborts
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define-fun right-all-aborts          (
        (state-left     (Array Int CompositionState-Left))
        (state-right    (Array Int CompositionState-Right))
        (state-length-left Int)  ; old index
        (state-length-right Int) ; old index
        (state-left-NEU  Return_Left_gate_GBLG)      ; old index
        (state-right-NEU Return_Right_simgate_GBLG) ; old index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-right-1  (select  state-right state-length-right)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                ;1))
    ))

  (let

; state of the key packages
(
(bottom-key-package-right-1    (project-State_Right_keys_bottom  (composition-pkgstate-Right-keys_bottom  state-right-1)))
(top-key-package-right-1       (project-State_Right_keys_top     (composition-pkgstate-Right-keys_top     state-right-1)))
)


(let

; tables of the top and bottom key package
(
(   T-top-right-1  (state-keys-T       top-key-package-right-1))
(   z-top-right-1  (state-keys-z       top-key-package-right-1))
(flag-top-right-1  (state-keys-flag    top-key-package-right-1))
(flag-bot-right-1  (state-keys-flag bottom-key-package-right-1))
(   z-bot-right-1  (state-keys-z    bottom-key-package-right-1))
)

;;; if j is true, then abort
(=>
(or
(= (select    z-top-right-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-right-1 l) (as mk-none (Maybe Bool)))
(= (select flag-top-right-1 l)    (mk-some        false))
(= (select    z-top-right-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-right-1 r) (as mk-none (Maybe Bool)))
(= (select flag-top-right-1 r)    (mk-some        false))
(= (select flag-bot-right-1 j)    (mk-some        true ))
(= (select    z-bot-right-1 j)    (mk-some        true ))
(= (select    z-bot-right-1 j)    (mk-some        false))
)
(= (return-Right-simgate-GBLG-is-abort state-right-NEU) true)
)))))


(define-fun right-all-aborts-inverse          (
        (state-left        (Array Int CompositionState-Left ))
        (state-right       (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index
        (state-length-right Int) ; old index
        (state-left-NEU     Return_Left_gate_GBLG)     ; contains own index
        (state-right-NEU    Return_Right_simgate_GBLG) ; contains own index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool

  (let

; state of the key packages
(
(bottom-key-package-right-1    (project-State_Right_keys_bottom  (composition-pkgstate-Right-keys_bottom  (select state-right state-length-right))))
(   top-key-package-right-1    (project-State_Right_keys_top     (composition-pkgstate-Right-keys_top     (select state-right state-length-right))))
)


(let

; table of the bottom key package
(
(   T-top-right-1     (state-keys-T       top-key-package-right-1))
(   z-top-right-1     (state-keys-z       top-key-package-right-1))
(flag-top-right-1     (state-keys-flag    top-key-package-right-1))
(flag-bottom-right-1  (state-keys-flag bottom-key-package-right-1))
(   z-bottom-right-1  (state-keys-z    bottom-key-package-right-1))
)

;;; abort => input on l or z not defined or output was already defined.
(=>
(= (return-Right-simgate-GBLG-is-abort state-right-NEU) true)
(or
(= (select    z-top-right-1    l)    (as mk-none (Maybe Bool)))
(= (select flag-top-right-1    l)    (as mk-none (Maybe Bool)))
(= (select flag-top-right-1    l)       (mk-some        false))
(= (select    z-top-right-1    r)    (as mk-none (Maybe Bool)))
(= (select flag-top-right-1    r)    (as mk-none (Maybe Bool)))
(= (select flag-top-right-1    r)       (mk-some        false))
(= (select flag-bottom-right-1 j)       (mk-some        true ))
(= (select    z-bottom-right-1 j)       (mk-some        true ))
(= (select    z-bottom-right-1 j)       (mk-some        false))
)
))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    LEFT aborts = RIGHT aborts
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define-fun aborts-equal          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index = 1
        (state-length-right Int) ; old index = 1
        (state-left-NEU Return_Left_gate_GBLG)      ; also contains new index    
        (state-right-NEU Return_Right_simgate_GBLG) ; also contains new index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


(= (return-Left-gate-GBLG-is-abort     state-left-NEU)
   (return-Right-simgate-GBLG-is-abort state-right-NEU))
)

(define-fun aborts-left-right          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index = 1
        (state-length-right Int) ; old index = 1
        (state-left-NEU Return_Left_gate_GBLG)      ; also contains new index    
        (state-right-NEU Return_Right_simgate_GBLG) ; also contains new index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


(=> (return-Left-gate-GBLG-is-abort     state-left-NEU)
    (return-Right-simgate-GBLG-is-abort state-right-NEU))
)

(define-fun aborts-right-left          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index = 1
        (state-length-right Int) ; old index = 1
        (state-left-NEU Return_Left_gate_GBLG)      ; also contains new index    
        (state-right-NEU Return_Right_simgate_GBLG) ; also contains new index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


(=> (return-Right-simgate-GBLG-is-abort state-right-NEU)
    (return-Left-gate-GBLG-is-abort     state-left-NEU ))
)


; no-abort

(define-fun no-abort          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; old index = 1
        (state-length-right Int) ; old index = 1
        (state-left-NEU Return_Left_gate_GBLG)      ; also contains new index    
        (state-right-NEU Return_Right_simgate_GBLG) ; also contains new index
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool

(and
(= (return-Left-gate-GBLG-is-abort     state-left-NEU)
   false)
(= (return-Left-gate-GBLG-is-abort     state-left-NEU)
   false)
))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    State lemmas Left
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Only need to consider the bottom key package,
; because the top key package does not change
; and CVC5 has no problems proving this.
;
; no abort   =>  Position h now contains Z
; unconditional: Everywhere else same as old
;
; Approach: precondition = no-abort and 
; full characterization of no-abort
; The latter two things only come in the TOML
;
; Implementation:
;                  bot-Z-left-2: After first call, Z is stored at h. 23:07
;  bot-except-left-neu-left-alt: Same as before except for h.        seconds
;     bot-table-left-2-left-neu: Does not change later.              seconds
;
;    todo: What about other state, z and flag?

(declare-const Z (Array Bool (Maybe Bits_n)))

(define-fun bot-Z-left-2          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left Int)  ; old index
        (state-length-right Int) ; old index
        (state-left-NEU  Return_Left_gate_GBLG)    
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                1))
      (state-left-2  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                2))
    )

  (let

; state of the bottom key packages
(
(bottom-key-package-left-1     (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-1)))
(bottom-key-package-left-2     (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-2)))
)

(let
(
              ;assignment of the sampled values for the lower Key package as a table
              (Z-left (store (store Z
                  false (mk-some randval-left-6))
                  true  (mk-some randval-left-5)))
)


(let
(
              ; table of the bottom key package
              (flag-bottom-left-1  (state-keys-flag bottom-key-package-left-1))
              ;(T-bottom-left-1     (state-keys-T    bottom-key-package-left-1))
              (T-bottom-left-2     (state-keys-T    bottom-key-package-left-2))
)

;;; top key packages have equal state
(=>
(not (= (select flag-bottom-left-1 j) (mk-some true)))
     (= (select    T-bottom-left-2 j) (mk-some Z-left))
))))))

(define-fun bot-except-left-neu-left-alt      (
        (state-left-alt (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
    Bool


    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
    )

    (let

; state of the key packages
(
(top-key-package-left-alt (project-State_Left_keys_top       (composition-pkgstate-Left-keys_top    (select state-left-alt state-length-left-old))))
(top-key-package-left-neu (project-State_Left_keys_top       (composition-pkgstate-Left-keys_top    state-left-neu)))
(bottom-key-package-left-alt (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom (select state-left-alt state-length-left-old))))
(bottom-key-package-left-neu (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-neu)))
)

(let

; table of the bottom key package
(
(table-top-left-alt (state-keys-T top-key-package-left-alt))
(table-top-left-neu (state-keys-T top-key-package-left-neu))
(table-bottom-left-alt (state-keys-T bottom-key-package-left-alt))
(table-bottom-left-neu (state-keys-T bottom-key-package-left-neu))
)

(let
(
              ;assignment of the sampled values for the lower Key package as a table
              (Z-left (store (store Z
                    false (mk-some randval-left-6))
                  true (mk-some randval-left-5)))
              
)

;;; bottom key packages equal except for position j
(forall ((hh Int))
(=>
(not
(and (= j hh) (= (select table-bottom-left-alt hh) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))))
(= (select table-bottom-left-alt hh) (select table-bottom-left-neu hh))
)))))))

(define-fun bot-table-left-2-left-neu
          (
        (state-left  (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ; length of old state
        (state-length-right Int) ; length of old state
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-neu  (select  (return-Left-gate-GBLG-state        state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)
                              ))
      (state-left-2  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                2))                          
    )

  (let

; state of the key packages
(
(bottom-key-package-left-neu  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-neu)))
(bottom-key-package-left-2    (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-2)))
)

;; bottom key left = bottom key right
(and
(= bottom-key-package-left-neu bottom-key-package-left-2)
)

)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    State lemmas
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; top left = top right

(define-fun top-whole-left-neu-right-neu          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ;old index
        (state-length-right Int) ;old index
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))
    )

  (let

; state of the key packages
(
(   top-key-package-left-neu  (project-State_Left_keys_top     (composition-pkgstate-Left-keys_top     state-left-neu)))
(   top-key-package-right-neu (project-State_Right_keys_top    (composition-pkgstate-Right-keys_top    state-right-neu)))
(bottom-key-package-left-neu  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-neu)))
(bottom-key-package-right-neu (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))
)


;;; top key packages have equal state
(= top-key-package-left-neu top-key-package-right-neu)


)))








(define-fun well-bot-left-NEU          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left  Int) ;length of old state
        (state-length-right Int) ;length of old state
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-neu (select  (return-Left-gate-GBLG-state        state-left-NEU)
                               (return-Left-gate-GBLG-state-length state-left-NEU)))
    )

  (let

; state of the key packages
(
(bottom-key-package-left-neu  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-neu)))
;(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right))))
)

;;; bot left key package is well-formed
(and
(well-defined-Key-bool bottom-key-package-left-neu)
))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;    RIGHT AND MESSY STUFF
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define-fun bot-table-right-alt-right-1
          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                1))
      (state-right-1 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                1))
    )

  (let

; state of the key packages
(
(bottom-key-package-left-alt  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom (select state-left state-length-left-old))))
(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-left-1  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-1)))
(bottom-key-package-right-1 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-1)))
)

;; bottom key packages have equal state
(and
(= bottom-key-package-left-1 bottom-key-package-left-alt)
(= bottom-key-package-right-1 bottom-key-package-right-alt)
)

)))


(define-fun well-bot-right-NEU          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
       (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                 (return-Right-simgate-GBLG-state-length state-right-NEU)))


    )

  (let

; state of the key packages
(
(bottom-key-package-right-neu  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))
;(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right))))
)



;;; bot right key package is well-formed
(and
(well-defined-Key-active bottom-key-package-right-neu)
;(= bottom-key-package-left-2 bottom-key-package-left-1)
;(= bottom-key-package-right-2 bottom-key-package-right-1)
))))

(define-fun well-bot-right-1          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-right-1 (select  (return-Right-simgate-GBLG-state state-right-NEU) 
                   1))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))


    )

  (let

; state of the key packages
(
(bottom-key-package-right-1    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-1)))
(bottom-key-package-right-neu  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))
;(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right))))
)



;;; bot right key package is defined
(and
(well-defined-Key-active bottom-key-package-right-1)
;(well-defined-Key-bool bottom-key-package-right-neu)
))))


(define-fun pre-right         (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-right-1 (select  (return-Right-simgate-GBLG-state state-right-NEU) 
                   1))
;      (state-right-2 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   2))
;      (state-right-3 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   3))
;      (state-right-4 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   4))
;      (state-right-5 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   5))
;      (state-right-6 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   6))
;      (state-right-7 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   7))
;      (state-right-8 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   8))
;      (state-right-9 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   9))
;      (state-right-10 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   10))
;      (state-right-11 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   11))
;      (state-right-12 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   12))
;      (state-right-13 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   13))
;      (state-right-14 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   14))
;      (state-right-15 (select  (return-Right-simgate-GBLG-state state-right-NEU)
;                   15))
      (state-right-neu (select   (return-Right-simgate-GBLG-state        state-right-NEU)
                                 (return-Right-simgate-GBLG-state-length state-right-NEU)))


    )

  (let

; state of the key packages
(
(top-key-package-right-neu     (project-State_Right_keys_top (composition-pkgstate-Right-keys_top state-right-neu)))
(top-key-package-right-alt     (project-State_Right_keys_top (composition-pkgstate-Right-keys_top (select state-right state-length-right-old))))
(bottom-key-package-right-alt  (project-State_Right_keys_bottom  (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-right-1    (project-State_Right_keys_bottom  (composition-pkgstate-Right-keys_bottom state-right-1)))
;(bottom-key-package-right-2    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-2)))
;(bottom-key-package-right-3    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-3)))
;(bottom-key-package-right-4    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-4)))
;(bottom-key-package-right-5    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-5)))
;(bottom-key-package-right-6    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-6)))
;(bottom-key-package-right-7    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-7)))
;(bottom-key-package-right-8    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-8)))
;(bottom-key-package-right-9    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-9)))
;(bottom-key-package-right-10    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-10)))
;(bottom-key-package-right-11    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-11)))
;(bottom-key-package-right-12    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-12)))
;(bottom-key-package-right-13    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-13)))
;(bottom-key-package-right-14    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-14)))
;(bottom-key-package-right-15    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-15)))
(bottom-key-package-right-neu  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))
;(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right))))
)



;;; bot right key package is defined
(and
(not (= (select (state-keys-T top-key-package-right-alt) l) (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
(not (= (select (state-keys-T top-key-package-right-alt) r) (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
(=      (select (state-keys-T bottom-key-package-right-alt) j) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))
;(well-defined-Key-bool bottom-key-package-right-neu)
))))

(define-fun lemma2-keys-2          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                1))
      (state-right-1 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                1))
      (state-left-2  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                2))
      (state-right-2 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                2))
      (state-left-3  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                3))
      (state-right-3 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                3))
      (state-right-4 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                4))
      (state-right-5 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                5))
    )

  (let

; state of the key packages
(
(bottom-key-package-left-alt  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom (select state-left state-length-left-old))))
(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-left-1  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom state-left-1)))
(bottom-key-package-right-1 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-1)))
(bottom-key-package-left-2  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom state-left-2)))
(bottom-key-package-right-2 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-2)))
(bottom-key-package-left-3  (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom state-left-3)))
(bottom-key-package-right-3 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-3)))
(bottom-key-package-right-4 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-4)))
(bottom-key-package-right-5 (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-5)))
)



;;; top key packages have equal state
(and
;(= bottom-key-package-left-2 bottom-key-package-left-1)
(= bottom-key-package-right-2 bottom-key-package-right-1)
))))

(define-fun lemma2-keys-3          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-1  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                1))
      (state-right-1 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                1))
      (state-left-2  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                2))
      (state-right-2 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                2))
      (state-left-3  (select  (return-Left-gate-GBLG-state state-left-NEU)
                                ;(return-Left-gate-GBLG-state-length state-left-NEU)
                                3))
      (state-right-3 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                3))
      (state-right-4 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                4))
      (state-right-5 (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                ;(return-Right-simgate-GBLG-state-length state-right-NEU)
                                5))
    )

  (let

; state of the key packages
(
(bottom-key-package-left-alt   (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  (select state-left  state-length-left-old))))
(bottom-key-package-right-alt  (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-left-1     (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-1)))
(bottom-key-package-right-1    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-1)))
(bottom-key-package-left-2     (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-2)))
(bottom-key-package-right-2    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-2)))
(top-key-package-right-2       (project-State_Right_keys_top    (composition-pkgstate-Right-keys_top    state-right-2)))
(bottom-key-package-left-3     (project-State_Left_keys_bottom  (composition-pkgstate-Left-keys_bottom  state-left-3)))
(bottom-key-package-right-3    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-3)))
(bottom-key-package-right-4    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-4)))
(bottom-key-package-right-5    (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-5)))
)


(let

; table of the bottom key package
(
(flag-top-right-2 (state-keys-flag top-key-package-right-2))
(T-top-right-2    (state-keys-T top-key-package-right-2))
)



;;; top key packages have equal state
(=>
(and
(= (select flag-top-right-2 l) (mk-some true))
(not (= (select T-top-right-2 l) (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
)
(= bottom-key-package-right-3 bottom-key-package-right-2)
)))))





(define-fun lemma2-left-keys-b          (
        (state-left-alt (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
    Bool

    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))
    )

    (let

; state of the key packages
(
(top-key-package-left-alt (project-State_Left_keys_top (composition-pkgstate-Left-keys_top (select state-left-alt state-length-left-old))))
(top-key-package-left-neu (project-State_Left_keys_top (composition-pkgstate-Left-keys_top state-left-neu)))
(bottom-key-package-left-alt (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom (select state-left-alt state-length-left-old))))
(bottom-key-package-left-neu (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-neu)))
)

(let

; table of the bottom key package
(
(table-top-left-alt (state-keys-T top-key-package-left-alt))
(table-top-left-neu (state-keys-T top-key-package-left-neu))
(table-bottom-left-alt (state-keys-T bottom-key-package-left-alt))
(table-bottom-left-neu (state-keys-T bottom-key-package-left-neu))
)

(let
(
              ;assignment of the sampled values for the lower Key package as a table
                (Z-left (store (store Z
                    false (mk-some randval-left-6))
                  true (mk-some randval-left-5)))
)

;;; bottom key packages equal except for position j
;;; and where there is j, there is the same or Z
( =>
(and (= (select table-bottom-left-alt j) (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
(= (select table-bottom-left-neu j) (mk-some Z-left)) ;this is the hard part in the proof
))))))

(define-fun bot-except-right-neu-right-alt          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG) 
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
    Bool


    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))
    )
    (let

; state of the key packages
(
(top-key-package-right-alt (project-State_Right_keys_top (composition-pkgstate-Right-keys_top (select state-right state-length-right-old))))
(top-key-package-right-neu (project-State_Right_keys_top (composition-pkgstate-Right-keys_top state-right-neu)))
(bottom-key-package-right-alt (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-right-neu (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))


)

(let

; table of the bottom key package
(
(table-top-right-alt    (state-keys-T top-key-package-right-alt))
(table-top-right-neu    (state-keys-T top-key-package-right-neu))
(table-bottom-right-alt (state-keys-T bottom-key-package-right-alt))
(table-bottom-right-neu (state-keys-T bottom-key-package-right-neu))


)

(let
(
              ;assignment of the sampled values for the lower Key package as a table
              (Z-right (store (store Z
                    false (mk-some randval-right-8))
                  true (mk-some randval-right-7)))
)


;;; bottom key packages equal except for position j
;;; and where there is j, there is the same or Z
(forall ((hh Int))
(=> (not
(and (= j hh) (= (select table-bottom-right-alt hh) (as mk-none (Maybe (Array Bool (Maybe Bits_n)))))))
(= (select table-bottom-right-alt hh) (select table-bottom-right-neu hh))
;(= (select table-bottom-right-neu hh) (mk-some Z-right)) ;this is the hard part in the proof
)))))))

(define-fun lemma2-right-keys-b          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
    Bool


    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))
    )

    (let

; state of the key packages
(
(top-key-package-right-alt (project-State_Right_keys_top (composition-pkgstate-Right-keys_top (select state-right state-length-right-old))))
(top-key-package-right-neu (project-State_Right_keys_top (composition-pkgstate-Right-keys_top state-right-neu)))
(bottom-key-package-right-alt (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom (select state-right state-length-right-old))))
(bottom-key-package-right-neu (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))

)

(let

; table of the bottom key package
(
(table-top-right-alt    (state-keys-T top-key-package-right-alt))
(table-top-right-neu    (state-keys-T top-key-package-right-neu))
(table-bottom-right-alt (state-keys-T bottom-key-package-right-alt))
(table-bottom-right-neu (state-keys-T bottom-key-package-right-neu))


)

(let
(
              ;assignment of the sampled values for the lower Key package as a table
              (Z-right (store (store Z
                    false (mk-some randval-right-8))
                  true (mk-some randval-right-7)))
)


;;; bottom key packages equal except for position j
;;; and where there is j, there is the same or Z
( =>
(and (= (select table-bottom-right-alt j) (as mk-none (Maybe (Array Bool (Maybe Bits_n))))))
(= (select table-bottom-right-neu j) (mk-some Z-right))) ;this is the hard part in the proof
)))))

(define-fun lemma2-keys          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool


    (let (
      (state-left-neu (select   (return-Left-gate-GBLG-state state-left-NEU)
                                (return-Left-gate-GBLG-state-length state-left-NEU)))
      (state-right-neu (select  (return-Right-simgate-GBLG-state state-right-NEU)
                                (return-Right-simgate-GBLG-state-length state-right-NEU)))
    )

  (let

; state of the key packages
(
(top-key-package-left-neu  (project-State_Left_keys_top  (composition-pkgstate-Left-keys_top  state-left-neu)))
(top-key-package-right-neu (project-State_Right_keys_top (composition-pkgstate-Right-keys_top state-right-neu)))
(bottom-key-package-left-neu  (project-State_Left_keys_bottom (composition-pkgstate-Left-keys_bottom state-left-neu)))
(bottom-key-package-right-neu (project-State_Right_keys_bottom (composition-pkgstate-Right-keys_bottom state-right-neu)))
)

(let

; table of the bottom key package
(
(table-bottom-left-neu (state-keys-T bottom-key-package-left-neu))
(table-bottom-right-neu (state-keys-T bottom-key-package-right-neu))


)


;;; top key packages have equal state
(= table-bottom-left-neu table-bottom-right-neu)


))))

(define-fun same-output          (
        (state-left (Array Int CompositionState-Left))
        (state-right (Array Int CompositionState-Right))
        (state-length-left-old Int)
        (state-length-right-old Int)
        (state-left-NEU Return_Left_gate_GBLG)
        (state-right-NEU Return_Right_simgate_GBLG)
        (h Int)
        (l Int)
        (r Int)
        (op (Array (Tuple2 Bool Bool) (Maybe Bool)))
        (j Int))
        Bool
(=
(return-Left-gate-GBLG-value return-left-gate-GBLG)
(return-Right-simgate-GBLG-value return-right-simgate-GBLG)
)
)(check-sat)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (right-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (right-all-aborts-inverse state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (right-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (right-all-aborts-inverse state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (aborts-right-left state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (right-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (right-all-aborts-inverse state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (aborts-left-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (aborts-right-left state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (aborts-left-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (aborts-equal state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (no-abort state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (right-all-aborts-inverse state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (top-whole-left-neu-right-neu state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (no-abort state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-except-left-neu-left-alt state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (no-abort state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-table-left-2-left-neu state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (no-abort state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (left-inverse-all-aborts state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-Z-left-2 state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-table-left-2-left-neu state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-except-left-neu-left-alt state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (well-bot-left-NEU state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (top-whole-left-neu-right-neu state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (pre-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-table-right-alt-right-1 state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (pre-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (well-bot-right-1 state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (pre-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (well-bot-right-NEU state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (pre-right state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (bot-except-right-neu-right-alt state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
(pop 1)
(push 1)
(assert (not (=> (and randomness-mapping-GBLG (= state-length-left-new (return-Left-gate-GBLG-state-length return-left-gate-GBLG)
)
 (= state-length-right-new (return-Right-simgate-GBLG-state-length return-right-simgate-GBLG)
)
 (invariant-GBLG state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
 (lemma2-keys-1 state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
 (lemma2-keys-2 state-left state-right state-length-left-old state-length-right-old return-left-gate-GBLG return-right-simgate-GBLG arg-GBLG-h arg-GBLG-l arg-GBLG-r arg-GBLG-op arg-GBLG-j)
)
)
)
(check-sat)
