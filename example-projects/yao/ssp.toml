[assumptions]
[assumptions.LeftRight]
left = "Left"
right = "Right"

[[game_hops]]
[game_hops.Reduction]

left = "Left"
right = "Right"
assumption = "LeftRight"
leftmap = [["keys_top", "keys_top"], ["keys_bottom", "keys_bottom"],["gate","gate"], ["enc", "enc"]]
rightmap = [["keys_top", "keys_top"], ["keys_bottom", "keys_bottom"],["simgate", "simgate"],["ev", "ev"]]

[[game_hops]]
[game_hops.Equivalence]

left = "Left"
right = "Right"
invariant_path = "./invariant-GBLG.smt2"
trees.GBLG = [ ["bot-table-left-alt-left-1", []],
               ["bot-Z-left-1", []],
               ["bot-table-left-2-left-neu", []],
               ["bot-j-abort",[]],
               ["bot-except-left-neu-left-alt", []],
               ["well-bot-left-NEU", []],
               ["top-whole-left-neu-right-neu", []],
               ["bot-table-right-alt-right-1", ["pre-right"]],
               ["well-bot-right-1",["pre-right"]],
               ["well-bot-right-NEU",["pre-right"]],
               ["bot-except-right-neu-right-alt", ["pre-right"]],
               ["lemma2-keys-2", ["lemma2-keys-1"]],
               ["lemma2-keys-3", ["lemma2-keys-1","lemma2-keys-2"]],
               ["lemma2-right-keys-b", ["no-abort","lemma1-keys","lemma2-right-keys-a"]],
               ["lemma2-left-keys-b", ["no-abort","lemma1-keys","lemma2-left-keys-a"]],
               ["lemma2-keys", ["no-abort","lemma2-left-keys-b","lemma2-right-keys-b"]],
               ["same-output", ["no-abort","lemma1-keys","lemma2-keys"]]
             ]