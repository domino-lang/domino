package AEReal {
params {
    n: Integer,
    enc: fn Bits(n), Bits(n), Bits(n) -> Bits(n),
}
 state{
    K: Table(Bits(n),  Bits(n)),
      }

    oracle Set(k: Bits(n), h: Bits(n))  {
        if (K[h] == None as Bits(n)) {
            K[h] <- Some(k);}
    }
    oracle Enc(h_: Bits(n), msg: Bits(n)) -> Bits(m) {
        k <- Unwrap(K[h_]);   
        r <-$ Bits(n);
        return enc(k,msg,r);
    }
    
    oracle Dec(h__: Bits(n), c: Bits(m)) -> Bits(n) {
        k <- Unwrap(K[h__]);
        return dec(k,c);
    }
}

