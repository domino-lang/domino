composition H7 {
        const n: Integer;
        const zeron: Bits(256);
        const prf: fn Bits(256), Integer, Integer, Bits(256), Bits(256), Bool ->  Bits(256);
        const mac: fn Bits(256), Bits(256), Integer -> Bits(256);
        const b: Bool;
        const bmac: Bool;
    
	instance PRF = PRF {
	    params {
            b: true,
		    prf: prf,
		    n: n,
		}
    }
	instance MAC = MAC {
        params {
  		    b: bmac,
			mac: mac,
			n: n,
		}
	}
	instance Nonces = Nonces {
		params {
        	n: n,
			b: true,
		}
	}
    instance Prot = ReductionMac {
        params {
        n: n,
        zeron: zeron,
        prf: prf,
        mac: mac,
        }
    }
    instance Game = Game_noprfkey {
        params {
        b: b,
        n: n,
        zeron: zeron,
        prf: prf,
        mac: mac,
        }
    }

    compose {
        adversary: {
            NewKey:     PRF,
            NewSession: Game,
            Send1:      Game,
            Send2:      Game,
            Send3:      Game,
            Send4:      Game,
            Send5:      Game,
            Reveal:     Game,
            Test:       Game,
			SameKey:	Game,
 			AtMost:		Game,
 			AtLeast:	Game,
       },

        Game: {
            Run1:      Prot,
            Run2:      Prot,
            Run3:      Prot,
            Run4:      Prot,
            Run5:      Prot,
			Hon:       PRF,
			Eval:      PRF,
        },

		Prot: {
			  Sample:	Nonces,
  			  Eval:     PRF,
			  Hon:      PRF,
			  Init:     MAC,
			  Mac:      MAC,
			  Verify:   MAC,
		}
    }
}
