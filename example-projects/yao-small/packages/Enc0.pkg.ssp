package Enc0 {
    params {
        n: Integer,
        m: Integer,
        p: Integer,
        encn: fn Bits(n),Bits(n),Bits(n) -> Bits(m),
        encm: fn Bits(n),Bits(m),Bits(n) -> Bits(p),
        i: Integer,
    }

    import oracles {
        GETKEYSIN[(i-1)](h: Integer) -> Table(Bool,Bits(n)),
    }

    state {
    }

    oracle ENCN(j: Integer,d: Bool, nzero: Bits(n), none: Bits(n)) -> Bits(m) {
        K <- invoke GETKEYSIN[(i-1)](j);
        r <-$ Bits(n);
        c <- encn(Unwrap(K[d]),nzero,r);
        return c;
    }

    oracle ENCM(j: Integer,d: Bool, mzero: Bits(m), mone: Bits(m)) -> Bits(p) {
        K <- invoke GETKEYSIN[(i-1)](j);
        r <-$ Bits(n);
        c <- encm(Unwrap(K[d]),mzero,r);
        return c;
    }

}